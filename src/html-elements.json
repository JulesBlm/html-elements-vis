{
  "tag": "<html>",
  "name": "The HTML Document",
  "description": "The grandest grandparent element! The root of it all the `<html>` tag itself. All other elements must be descendants of this element. It can only contain one `<head>` element followed by one `<body>` element.",
  "tip": "Remember to add the 'lang' with a language code to it to correctly identify the page's language. Screen readers use this to dictate the page.",
  "attributes": [
    {
      "name": "xmlns",
      "description": "Specifies the XML Namespace of the document. These days it is not really necessary to define"
    },
    {
      "name": "lang",
      "description": "String containing a single language tag. Providing this tag will help screen reading technology determine the proper language to announce. The identifying language tag should describe the language used by the majority of the content of the page. Without it, screen readers will typically default to the operating system's set language, which may cause mispronunciations",
      "links": [
        {
          "url": "https://adrianroselli.com/2015/01/on-use-of-lang-attribute.html",
          "title": "Adrian Roselli: On Use of the Lang Attribute",
          "lastEdited": "2021-07-24"
        },
        {
          "title": "CSS IRL: Don’t Forget the “lang” Attribute",
          "url": "https://css-irl.info/dont-forget-the-lang-attribute/",
          "lastEdited": " 2021-11-02"
        },
        {
          "url": "https://www.matuzo.at/blog/lang-attribute/",
          "title": "Manuel Matuzovic: The lang attribute: browsers telling lies, telling sweet little lies",
          "lastEdited": "2020-10-19"
        }
      ]
    }
  ],
  "links": [
    {
      "title": "MDN: Introduction to HTML",
      "url": "https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML"
    },
    {
      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html",
      "title": "MDN: The HTML Document / Root element"
    }
  ],
  "type": "unique",
  "children": [
    {
      "tag": "<head>",
      "name": "The Document Metadata element",
      "description": "Contains metadata about the document, like its title, favicon, scripts, and style sheets. <head> is not directly shown on screen. It's the first child element of the document.",
      "type": "unique",
      "links": [
        {
          "url": "https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML",
          "title": "MDN: What’s in the head? Metadata in HTML"
        },
        {
          "title": "HTML Spec: The head element",
          "url": "https://html.spec.whatwg.org/multipage/semantics.html#the-head-element"
        }
      ],
      "children": [
        {
          "tag": "<title>",
          "name": "The Document Title element",
          "description": "Defines the document's title that is shown in a browser's title bar or a page's tab. It only contains text; tags within the element are ignored",
          "type": "unique"
        },
        {
          "tag": "<base>",
          "name": "The Document Base URL element",
          "description": "Specifies the base URL to use for all relative URLs in a document. If either of the following attributes are specified, it MUST come before other elements with attribute values of URLs, such as `<link>`’s href attribute",
          "attributes": [
            {
              "name": "href",
              "description": "The base URL to be used throughout the document for relative URLs. Absolute and relative URLs are allowed"
            },
            {
              "name": "target",
              "description": "A keyword or author-defined name of the default browsing context to show the results of navigation"
            }
          ],
          "type": "unique empty"
        },
        {
          "tag": "<link>",
          "name": "The External Resource Link element",
          "type": "group empty",
          "description": "The Link tag is for associating resources. It specifies relationships between the current document and an external resource. This element is most commonly used to link to stylesheets, but is also used to set site icons, preload resources to be used soon, and preload modules too. Yup, it's a versatile little beast and maybe a little weird. It does very different things depending on the value of its 'rel' attribute. Most the attributes don't even make sense unless combined with some other attribute, other attributes can't be combined at all. That's why I've split them according to 'rel' type.",
          "tip": "Media queries work on all link tags, not just stylesheet. This means you can preload/preconnect/prefetch with different strategies for responsive sites.",
          "children": [
            {
              "name": "rel='prerender'",
              "description": "Suggests that the browser fetch the linked resource in advance, and that it also render the prefetched content offscreen so it can be quickly presented to the user once needed.",
              "type": "experimental",
              "links": [
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/prerender",
                  "title": "MDN: Link types: prerender"
                }
              ]
            },
            {
              "name": "rel='stylesheet'",
              "description": "Defines an external resource to be downloaded and applied as a stylesheets",
              "attributes": [
                {
                  "name": "disabled",
                  "description": "Indicates whether or not the described stylesheet should be loaded and applied to the document. If disabled is specified in the HTML when it is loaded, the stylesheet will not be loaded during page load. Instead, the stylesheet will be loaded on-demand, if and when the disabled attribute is changed to false or removed."
                },
                {
                  "name": "title",
                  "description": "When used on a `<link rel='stylesheet'>` it defines a preferred or an alternate stylesheet. Incorrectly using it may cause the stylesheet to be ignored."
                }
              ],
              "links": [
                {
                  "title": "MDN: Alternative style sheets",
                  "url": "https: //developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets"
                },
                {
                  "title": "Those HTML Attributes You Never Use: The title Attribute On Stylesheets",
                  "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#the-title-attribute-on-stylesheets",
                  "lastEdited": "2022-03-23"
                }
              ]
            },
            {
              "name": "rel='icon'",
              "description": "Indicates that the resource is the icon, called the favicon. If there are multiple `<link rel='icon'>`s, the browser uses their media, type, and sizes attributes to select the most appropriate icon",
              "links": [
                {
                  "url": "https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs",
                  "title": "How to Favicon in 2021 by Andrey Sitnik"
                },
                {
                  "url": "https://dev.to/masakudamatsu/favicon-nightmare-how-to-maintain-sanity-3al7",
                  "title": "Definitive edition of 'How to Favicon in 2021' by Masa Kudamatsu"
                },
                {
                  "url": "https://web.dev/building-an-adaptive-favicon/",
                  "title": "web.dev: Building an adaptive favicon"
                }
              ],
              "attributes": [
                {
                  "name": "sizes",
                  "description": "This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the rel contains a value of icon or a non-standard type such as Apple's apple-touch-icon,  may have the following values: any, meaning that the icon can be scaled to any size as it is in a vector format, like image/svg+xml. Or a white-space separated list of sizes, each in the format <width in pixels>x<height in pixels> "
                }
              ]
            },
            {
              "name": "rel='manifest'",
              "description": "indicates that the target resource is a Web App Manifest",
              "links": [
                {
                  "url": "https://web.dev/add-manifest/",
                  "title": "web.dev: Add a web app manifest"
                },
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Web/Manifest",
                  "title": "MDN: Web app manifests"
                }
              ]
            },
            {
              "name": "rel='preload'",
              "description": "Tells the browser to download a resource because this resource will be needed later during the current navigation",
              "links": [
                {
                  "url": "https://addyosmani.com/blog/script-priorities/",
                  "title": "Addy Osmani: JavaScript Loading Priorities in Chrome"
                },
                {
                  "title": "MDN: Link types: preload",
                  "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content"
                }
              ],
              "attributes": [
                {
                  "name": "as",
                  "description": "It specifies the type of content being loaded by the `<link>`, which is necessary for request matching, application of correct content security policy, and setting of correct Accept request header. Furthermore, `rel='preload'` uses this as a signal for request prioritization. The table below lists the valid values for this attribute and the elements or resources they apply to."
                }
              ]
            },
            {
              "name": "rel='modulepreload'",
              "description": "Initiates early (and high-priority) loading of module scripts"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "description": "Specifies the URL of the linked resource. A URL can be absolute or relative",
              "type": "url"
            },
            {
              "name": "rel",
              "values": [
                {
                  "value": "preload",
                  "description": "Tells the browser to download a resource because this resource will be needed later during the current navigation"
                },
                {
                  "value": "prefetch",
                  "description": "the browser will automatically load this JavaScript file into the browser cache so it’s ready ahead of time"
                },
                {
                  "value": "prev",
                  "description": ""
                },
                {
                  "value": "alternate",
                  "description": "if rel also contains `stylesheet`, `alternate` defines an alternative style sheet; in that case the `title` attribute must be present and not be the empty string. Otherwise, the link defines an alternative page, of one of these types: for another medium, like a handheld device (if the media attribute is set), in another language (if the hreflang attribute is set), in another format, such as a PDF or an RSS feed (if the type attribute is set)"
                },
                {
                  "value": "canonical",
                  "description": ""
                },
                {
                  "value": "help",
                  "description": "indicates that the hyperlink leads to a resource giving further help about the parent of the element"
                },
                {
                  "value": "search",
                  "description": ""
                },
                {
                  "value": "tag",
                  "description": ""
                },
                {
                  "value": "license",
                  "description": "Indicates that the hyperlink leads to a document describing the licensing information"
                },
                {
                  "value": "modulepreload",
                  "description": "Initiates early (and high-priority) loading of module scripts"
                },
                {
                  "value": "next",
                  "description": ""
                },
                {
                  "value": "pingback",
                  "description": ""
                }
              ]
            },
            {
              "name": "crossorigin",
              "description": "Indicates whether CORS must be used when fetching the resource. CORS-enabled images can be reused in the <canvas> element without being tainted.",
              "type": "enumarated",
              "values": [
                {
                  "value": "anonymous",
                  "description": "A cross-origin request (i.e. with an Origin HTTP header) is performed, but no credential is sent (i.e. no cookie, X.509 certificate, or HTTP Basic authentication). If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin HTTP header) the resource will be tainted and its usage restricted."
                },
                {
                  "value": "use-credentials",
                  "description": "A cross-origin request (i.e. with an Origin HTTP header) is performed along with a credential sent (i.e. a cookie, certificate, and/or HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials HTTP header), the resource will be tainted and its usage restricted."
                }
              ]
            },
            {
              "name": "media",
              "description": "This means you can preload/preconnect/prefetch with different strategies for responsive sites."
            },
            {
              "name": "type",
              "type": "mimetype"
            }
          ],
          "links": [
            {
              "url": "https://html.spec.whatwg.org/multipage/semantics.html#the-link-element",
              "title": "HTML Spec: The link element"
            },
            {
              "url": "https://twitter.com/patmeenan/status/1448254251243823105?s=20",
              "title": "Tweet by Patrick Meenan"
            },
            {
              "url": "https://ryanflorence.dev/p/ship-weird",
              "title": "Ryan Florence: Ship Weird - the <link> element is WEIRD."
            }
          ]
        },
        {
          "tag": "<style>",
          "name": "The Style Information element",
          "description": "contains CSS for a document, or part of a document",
          "attributes": [
            {
              "name": "media",
              "description": "Defines which media the style should be applied to. Its value is a CSS media query",
              "type": "mediaquery"
            },
            {
              "name": "nonce",
              "description": "A cryptographic nonce (number used once) used to whitelist inline styles in a style-src Content-Security-Policy"
            },
            {
              "name": "title",
              "description": "Specifies alternative style sheet sets"
            }
          ],
          "links": [
            {
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style",
              "title": "MDN: The Style Information element"
            },
            {
              "url": "https://html.spec.whatwg.org/multipage/semantics.html#the-style-element",
              "title": "HTML Spec: The style element"
            }
          ]
        },
        {
          "tag": "<meta>",
          "name": "The Metadata element",
          "description": "Represents metadata that cannot be represented by other HTML meta-related elements.",
          "type": "empty",
          "links": [
            {
              "title": "Fjolt - Meta Tag Reference and Bullet Proof HTML Template",
              "url": "https://fjolt.com/article/meta-tag-ref-html-quick-start"
            },
            {
              "title": "CSS-tricks.com: The Essential Meta Tags for Social Media",
              "url": "https://css-tricks.com/essential-meta-tags-social-media/"
            },
            {
              "title": "About Twitter Cards",
              "url": "https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards"
            },
            {
              "title": "The Open Graph Protocol",
              "url": "https://ogp.me/"
            },
            {
              "title": "Standardista: http-equiv: the meta attribute explained",
              "url": "http://www.standardista.com/html5/http-equiv-the-meta-attribute-explained/"
            },
            {
              "title": "MDN: Standard metadata names defined in the HTML specification",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name"
            },
            {
              "title": "MDN: Using the viewport meta tag to control layout on mobile browsers",
              "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag"
            },
            {
              "title": "MetaExtensions",
              "url": "https://wiki.whatwg.org/wiki/MetaExtensions"
            }
          ],
          "attributes": [
            {
              "name": "charset",
              "description": "declares the document's character encoding. 'utf-8' is the only allowed option as it's the only valid encoding for HTML5 documents"
            },
            {
              "name": "name & content",
              "description": "The name and content attributes can be used together to provide document metadata in terms of name-value pairs, with the name attribute giving the metadata name, and the content attribute giving the value. This is often used to define social media cards, which make links more shareable. Facebook uses the Open Graph Protocol, while Twitter has it's own format for cards",
              "values": [
                {
                  "value": "name='description'",
                  "description": "A short and accurate summary of the content of the page. Google uses the first up to 160 characters of this as text description in search results"
                },
                {
                  "value": "name='author'",
                  "description": "The name of the document's author"
                },
                {
                  "value": "name='generator'",
                  "description": "The identifier of the software that generated the page"
                },
                {
                  "value": "name='keywords'",
                  "description": "Words relevant to the page's content separated by commas"
                },
                {
                  "value": "name='referrer'",
                  "description": "Rou can set the referrer policy for the entire document with a <meta> element with a name of referrer controls the HTTP Referer header for to requests sent from the document. Note that the values listed here are for the content attribute",
                  "type": "enumarated",
                  "values": [
                    {
                      "value": "no-referrer",
                      "description": "Do not send a HTTP Referer header"
                    },
                    {
                      "value": "origin",
                      "description": "Send the origin of the document"
                    },
                    {
                      "value": "no-referrer-when-downgrade",
                      "description": "Send the full URL when the destination is at least as secure as the current page (HTTP(S)→HTTPS), but send no referrer when it's less secure (HTTPS→HTTP). This is the default behaviour"
                    },
                    {
                      "value": "origin-when-cross-origin",
                      "description": "Send the full URL (stripped of parameters) for same-origin requests, but only send the origin for other cases"
                    },
                    {
                      "value": "same-origin",
                      "description": "Send the full URL (stripped of parameters) for same-origin requests. Cross-origin requests will contain no referrer header"
                    },
                    {
                      "value": "strict-origin",
                      "description": "Send the origin when the destination is at least as secure as the current page (HTTP(S)→HTTPS), but send no referrer when it's less secure (HTTPS→HTTP)"
                    },
                    {
                      "value": "strict-origin-when-cross-origin",
                      "description": "Send the full URL (stripped of parameters) for same-origin requests. Send the origin when the destination is at least as secure as the current page (HTTP(S)→HTTPS). Otherwise, send no referrer"
                    },
                    {
                      "value": "unsafe-URL",
                      "description": "Send the full URL (stripped of parameters) for same-origin or cross-origin requests"
                    }
                  ]
                },
                {
                  "value": "name='theme-color'",
                  "description": "Indicates a suggested color that user agents should use to customize the display of the page or of the surrounding user interface. The content attribute contains a valid CSS color",
                  "links": [
                    {
                      "url": "https://css-tricks.com/meta-theme-color-and-trickery/",
                      "title": "CSS-tricks.com: Meta Theme Color and Trickery"
                    }
                  ]
                },
                {
                  "value": "name='viewport'",
                  "description": "gives hints about the size of the initial size of the viewport. Used by mobile devices only",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag",
                      "title": "MDN: Using the viewport meta tag to control layout on mobile browsers"
                    }
                  ]
                },
                {
                  "value": "name='width'",
                  "description": "Defines the pixel width of the viewport that you want the web site to be rendered at."
                },
                {
                  "value": "name='height'",
                  "description": "Defines the height of the viewport. Not used by any browser"
                },
                {
                  "name": "name='initial-scale'",
                  "description": "A positive number between 0.0 and 10.0. Defines the ratio between the device width (device-width in portrait mode or device-height in landscape mode) and the viewport size. A positive integer, or the text device-height"
                },
                {
                  "name": "name='maximum-scale'",
                  "description": "A positive number between 0.0 and 10.0. Defines the maximum amount to zoom in. It must be greater or equal to the minimum-scale or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default."
                },
                {
                  "name": "name='minimum-scale'",
                  "description": "Defines the minimum zoom level. It must be smaller or equal to the maximum-scale or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default"
                },
                {
                  "name": "name='user-scalable'",
                  "description": "content = yes or no. If set to no, the user is not able to zoom in the webpage. The default is yes. Browser settings can ignore this rule, and iOS10+ ignores it by default."
                },
                {
                  "name": "name='viewport-fit'",
                  "description": "content = auto, contain or cover. The auto value doesn’t affect the initial layout viewport, and the whole web page is viewable. The contain value means that the viewport is scaled to fit the largest rectangle inscribed within the display. The cover value means that the viewport is scaled to fill the device display. It is highly recommended to make use of the safe area inset variables to ensure that important content doesn't end up outside the display"
                },
                {
                  "value": "name='robots'",
                  "description": "the behaviour that cooperative crawlers, or 'robots', should use with the page. It is a comma-separated list of the values below:"
                }
              ]
            },
            {
              "name": "http-equiv",
              "description": "used by servers to gather information about a page using the HTTP header. The 'http-equiv' attribute is similar to a http header."
            }
          ]
        },
        {
          "tag": "<script>",
          "name": "The Script element",
          "description": "The script tag is mostly used to include JavaScript. It can also be used to run WebGL's GLSL shader programming language or include JSON.",
          "links": [
            {
              "url": "https://addyosmani.com/blog/script-priorities/",
              "title": "Addy Osmani: JavaScript Loading Priorities in Chrome"
            }
          ],
          "attributes": [
            {
              "name": "async",
              "type": "boolean",
              "description": "For classic scripts, if the async attribute is present, then the classic script will be fetched in parallel to parsing and evaluated as soon as it is available. For module scripts, if the async attribute is present then the scripts and all their dependencies will be executed in the defer queue, therefore they will get fetched in parallel to parsing and evaluated as soon as they are available",
              "links": [
                {
                  "url": "https://zellwk.com/blog/javascript-async-and-defer/",
                  "title": "Zell: How and when to use Async and Defer attributes"
                }
              ]
            },
            {
              "name": "crossorigin",
              "type": "boolean",
              "description": "Normal script elements pass minimal information to the window.onerror for scripts which do not pass the standard CORS checks. Use this attribute to allow error logging for sites which use a separate domain for static media"
            },
            {
              "name": "defer",
              "type": "boolean",
              "description": "Indicates to a browser that the script is meant to be executed after the document has been parsed, but before firing DOMContentLoaded. The defer attribute has no effect on module scripts — they defer by default.",
              "links": [
                {
                  "url": "https://zellwk.com/blog/javascript-async-and-defer/",
                  "title": "Zell: How and when to use Async and Defer attributes"
                }
              ]
            },
            {
              "name": "integrity",
              "description": "Contains inline metadata that a user agent can use to verify that a fetched resource has been delivered free of unexpected manipulation"
            },
            {
              "name": "nomodule",
              "type": "boolean",
              "description": "Indicates that the script should not be executed in browsers that support ES2015 modules — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code"
            },
            {
              "name": "nonce",
              "description": "A cryptographic nonce (number used once) to whitelist scripts in a script-src Content-Security-Policy. The server must generate a unique nonce value each time it transmits a policy"
            },
            {
              "name": "referrerpolicy",
              "type": "enumarated",
              "description": "Indicates which referrer to send when fetching the script, or resources fetched by the script",
              "values": [
                {
                  "value": "no-referrer-when-downgrade",
                  "description": "(default) The Referer header will not be sent to origins without TLS (HTTPS)."
                },
                {
                  "value": "no-referrer",
                  "description": "The Referer header will not be sent."
                },
                {
                  "value": "origin",
                  "description": "The sent referrer will be limited to the origin of the referring page: its scheme, host, and port."
                },
                {
                  "value": "origin-when-cross-origin",
                  "description": "The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path."
                },
                {
                  "value": "same-origin",
                  "description": "A referrer will be sent for same origin, but cross-origin requests will contain no referrer information"
                },
                {
                  "value": "strict-origin: Only send the origin of the document as the referrer when the protocol security level stays the same (e.g. HTTPS→HTTPS), but don't send it to a less secure destination (e.g. HTTPS→HTTP)."
                },
                {
                  "value": "strict-origin-when-cross-origin",
                  "description": "Send a full URL when performing a same-origin request, but only send the origin when the protocol security level stays the same (e.g.HTTPS→HTTPS), and send no header to a less secure destination (e.g. HTTPS→HTTP)"
                },
                {
                  "value": "unsafe-url",
                  "description": "The referrer will include the origin and the path (but not the fragment, password, or username). This value is unsafe, because it leaks origins and paths from TLS-protected resources to insecure origins"
                }
              ]
            },
            {
              "name": "src",
              "description": "This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document"
            },
            {
              "name": "type",
              "type": "enumarated",
              "description": "This attribute indicates the type of script represented. Anything other than 'module' or a JavaScript MIME-type will be treated as a data block",
              "values": [
                {
                  "value": "module",
                  "description": "Causes the code to be treated as a JavaScript module. The processing of the script contents is not affected by the charset and defer attributes"
                },
                {
                  "value": "Any other value",
                  "description": "The embedded content is treated as a data block which won't be processed by the browser. Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks. The `src` attribute will be ignored."
                }
              ]
            }
          ]
        },
        {
          "tag": "<noscript> (head)",
          "name": "The Noscript element",
          "description": "Defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser. When it is a descendant of the <head> element: it can contain typical head elements like <link>, <style>, or <meta> elements."
        }
      ]
    },
    {
      "tag": "<body>",
      "name": "The Document Body element",
      "description": "Represents the content of an HTML document. There can be only one <body> element in a document",
      "type": "unique",
      "children": [
        {
          "name": "Text-level wrappers",
          "description": "Elements to assign meaning to text content.",
          "type": "group",
          "children": [
            {
              "name": "The Ruby Annotation element",
              "tag": "<ruby>",
              "description": "The ruby element allows one or more spans of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of text presented above, below, or next to base text. It's primarily used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common. Other possible use cases include: showing chords over lyrics or for footnotes. The term 'ruby' originated as a unit of measurement used by typesetters, representing the smallest size that text can be printed on newsprint while remaining legible",
              "links": [
                {
                  "url": "https://blog.tomayac.com/2021/01/24/ruby-html-footnotes/",
                  "title": "Thomas Steiner: <ruby> HTML footnotes",
                  "lastEdited": "2021-01-2021"
                },
                {
                  "url": "https://chenhuijing.com/blog/html-ruby/#%F0%9F%A6%8A",
                  "title": "Chen Hui Jing: All about the HTML <ruby> element (in 2016)",
                  "lastEdited": "2016-06-17"
                },
                {
                  "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-ruby-element",
                  "title": "HTML Spec: The ruby element"
                }
              ],
              "children": [
                {
                  "name": "The Ruby Text element",
                  "tag": "<rt>",
                  "description": "Specifies the ruby text component of a ruby annotation, which is most often used to provide pronounciation, translation, or transliteration information for East Asian typography.",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-rt-element",
                      "title": "HTML Spec: The rt element"
                    }
                  ]
                },
                {
                  "name": "The Ruby Fallback Parenthesis element",
                  "tag": "<rp>",
                  "description": "Used to provide fall-back parentheses for browsers that do not support display of ruby annotations using the `<ruby>` element. One `<rp>` element should enclose each of the opening and closing parentheses that wrap the `<rt>` element that contains the annotation's text.",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-rp-element",
                      "title": "HTML Spec: The rp element"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Text breakers",
              "description": "Elements to break lines text.",
              "type": "group",
              "children": [
                {
                  "tag": "<br>",
                  "name": "The Line Break element",
                  "description": "Produces a line break in text. It is useful for writing a poem or an address, where the division of lines is significant. Don't overuse it to make space between lines, then you should use CSS `margin` or `padding` instead",
                  "type": "empty replacedelement",
                  "links": [
                    {
                      "url": "https://pineco.de/using-the-line-breaking-element",
                      "title": "Using the Line Breaking Element"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-br-element",
                      "title": "HTML Spec: The br element"
                    }
                  ]
                },
                {
                  "tag": "<wbr>",
                  "name": "The Word Break Opportunity element",
                  "description": "Represents a word break opportunity, a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location",
                  "type": "empty",
                  "links": [
                    {
                      "url": "https://css-tricks.com/better-line-breaks-for-long-urls/",
                      "title": "CSS-tricks.com: Better Line Breaks for Long URLs - How do you control line breaks?"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-wbr-element",
                      "title": "HTML Spec: The wbr element"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Text Modifiers",
              "description": "These are more generic text-level wrappers. Though their role isn't as specific, they still assign some meaning to the wrapped text. The browser has default styles for most of these but do no depend on them to style text, that's always a job for CSS.",
              "type": "group",
              "children": [
                {
                  "tag": "<u>",
                  "name": "The Unarticulated Annotation element",
                  "description": "Represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. Valid use cases for the <u> element include annotating spelling errors",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-u-element",
                      "title": "HTML Spec: The u element"
                    }
                  ]
                },
                {
                  "tag": "<s>",
                  "name": "The Strikethrough element",
                  "description": "Is used to represent things that are no longer relevant or no longer accurate",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-small-element",
                      "title": "HTML Spec: The s element"
                    }
                  ]
                },
                {
                  "tag": "<sub>",
                  "description": "Specifies inline text which should be displayed as subscript for solely typographical reasons",
                  "name": "The Subscript element",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-small-element",
                      "title": "HTML Spec: The sub and sup elements"
                    }
                  ]
                },
                {
                  "tag": "<sup>",
                  "description": "Specifies inline text which is to be displayed as superscript for solely typographical reasons",
                  "name": "The Superscript element",
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-sub-and-sup-elements/",
                      "title": "HTML Spec: The sub and sup elements"
                    }
                  ]
                },
                {
                  "tag": "<b>",
                  "description": "Used to draw the reader's attention to the element's contents which are not otherwise granted special importance. For example,it can be used to highlight key words without marking them up as important. For strong emphasis, use <strong> instead.",
                  "name": "The 'Bring Attention To' element",
                  "links": [
                    {
                      "title": "MDN: The Bring Attention To element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-b-element",
                      "title": "HTML Spec: The b elements"
                    }
                  ]
                },
                {
                  "tag": "<strong>",
                  "name": "The Strong Importance element",
                  "description": "Indicates that its contents have strong importance, seriousness, or urgency",
                  "links": [
                    {
                      "title": "MDN: The Strong Importance element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-strong-element",
                      "title": "HTML Spec: The strong element"
                    }
                  ]
                },
                {
                  "tag": "<em>",
                  "description": "Marks text that has stress emphasis",
                  "name": "The Emphasis element",
                  "links": [
                    {
                      "title": "The Emphasis element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-strong-element",
                      "title": "HTML Spec: The em element"
                    }
                  ]
                },
                {
                  "tag": "<i>",
                  "name": "The Idiomatic Text element",
                  "description": "Represents a range of text that is set off from the normal text for some reason. Authors are encouraged to consider whether other elements might be more applicable than the i element, for instance the em element for marking up stress emphasis, or the dfn element to mark up the defining instance of a term.",
                  "links": [
                    {
                      "title": "Jens Oliver Meiert: Use the “i” Element, and Use It Appropriately",
                      "url": "https://meiert.com/en/blog/use-i-appropriately/"
                    },
                    {
                      "title": "MDN: The Idiomatic Text element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i"
                    },
                    {
                      "title": "HTML Spec: The i element",
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-i-element"
                    }
                  ]
                },
                {
                  "tag": "<mark>",
                  "name": "The Mark Text element",
                  "links": [
                    {
                      "title": "MDN: The Mark Text element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"
                    },
                    {
                      "title": "Samantha Ming: Highlight text with HTML <mark> tag",
                      "url": "https://www.samanthaming.com/tidbits/60-highlight-text-with-html-mark-tag/"
                    },
                    {
                      "title": "HTML Spec: The mark element",
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-mark-element"
                    }
                  ],
                  "description": "Represents text which is marked or highlighted for reference or notation purposes. If you usually use a styled <span> to highlight text, consider using <mark> instead, it's more meaningful (or sementically correct)"
                },
                {
                  "tag": "<small>",
                  "name": "The Side Comment element",
                  "links": [
                    {
                      "title": "MDN: The Side Comment element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small"
                    },
                    {
                      "title": "HTML Spec: The small element",
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-small-element"
                    }
                  ],
                  "description": "Represents side-comments and small print, like copyright and legal text, independent of its styled presentation."
                }
              ]
            },
            {
              "name": "Text-level content-specific",
              "description": "Elements to wrap certain text-level content types to convey meaning.",
              "type": "group",
              "children": [
                {
                  "tag": "<kbd>",
                  "name": "The Keyboard Input element",
                  "links": [
                    {
                      "title": "MND: <kbd>: The Keyboard Input element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd"
                    },
                    {
                      "title": "Dylan Smith: Styling the kbd element",
                      "url": "https://dylanatsmith.com/wrote/styling-the-kbd-element"
                    },
                    {
                      "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#keyboard-sample-and-variable",
                      "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements; Keyboard, Sample and Variable."
                    }
                  ],
                  "description": "Represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device"
                },
                {
                  "tag": "<q>",
                  "name": "The Inline Quotation element",
                  "description": "Indicates that the enclosed text is a short inline quotation",
                  "attributes": [
                    {
                      "name": "cite",
                      "description": "A URL that designates a source document or message for the information quoted",
                      "type": "url"
                    }
                  ],
                  "links": [
                    {
                      "title": "CSS-tricks.com: Quoting in HTML, quations,citations and blockquotes",
                      "url": "https://css-tricks.com/quoting-in-html-quotations-citations-and-blockquotes/"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-q-element",
                      "title": "HTML Spec: The q element"
                    },
                    {
                      "title": "Those HTML Attributes You Never Use: The cite Attribute For The <blockquote> And <q> Elements",
                      "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#the-cite-attribute-for-the-blockquote-and-q-elements",
                      "lastEdited": "2022-03-23"
                    }
                  ]
                },
                {
                  "tag": "<cite>",
                  "name": "The Citation element",
                  "description": "Used to describe a reference to a cited creative work, and must include the title of that work. In the context of the <cite> element, a creative work that might be cited could be, for example, a book, a research paper, a poem, or a film",
                  "links": [
                    {
                      "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#cite-and-blockquote",
                      "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements Keyboard; Cite and Blockquote."
                    },
                    {
                      "url": "https://css-tricks.com/quoting-in-html-quotations-citations-and-blockquotes/",
                      "title": "CSS-tricks.com: Quoting in HTML, quotations,citations and blockquotes"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-cite-element",
                      "title": "HTML Spec: The cite element"
                    }
                  ]
                },
                {
                  "tag": "<samp>",
                  "name": "The Sample Output element",
                  "description": "Used to enclose inline text which represents sample (or quoted) output from a computer program",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp",
                      "title": "MDN: The Sample Output element"
                    },
                    {
                      "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#keyboard-sample-and-variable",
                      "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements Keyboard, Sample and Variable."
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-samp-element",
                      "title": "HTML Spec: The samp element"
                    }
                  ]
                },
                {
                  "tag": "<code>",
                  "name": "The Inline Code element",
                  "description": "Displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code",
                      "title": "MDN: The Inline Code element"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-code-element",
                      "title": "HTML Spec: The code element"
                    }
                  ]
                },
                {
                  "tag": "<var>",
                  "name": "The Variable element",
                  "description": "Represents the name of a variable in a mathematical expression or a programming context",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var",
                      "title": "MDN: The Variable element"
                    },
                    {
                      "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#keyboard-sample-and-variable",
                      "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements Keyboard, Sample and Variable."
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-var-element",
                      "title": "HTML Spec: The var element"
                    }
                  ]
                },
                {
                  "tag": "<abbr>",
                  "name": "The Abbreviation element",
                  "attributes": [
                    {
                      "name": "title",
                      "description": "The title attribute has a specific semantic meaning when used with the <abbr> element; it must contain a full human-readable description or expansion of the abbreviation"
                    }
                  ],
                  "links": [
                    {
                      "url": "https://bitsofco.de/revisiting-the-abbr-element",
                      "title": "bitsofcode: Revisiting the <abbr> element"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-abbr-element",
                      "title": "HTML Spec: The abbr element"
                    }
                  ],
                  "description": "Represents an abbreviation or acronym; the optional title attribute can provide an expansion or description for the abbreviation"
                },
                {
                  "tag": "<time>",
                  "name": "The (Date) Time element",
                  "attributes": [
                    {
                      "name": "datetime",
                      "description": "Indicates the time and/or date of the element. Must be on of the valid formats in the following list",
                      "values": [
                        {
                          "value": "A valid year string: 1994"
                        },
                        {
                          "value": "A valid month string: 1994-02"
                        },
                        {
                          "value": "A valid date string: 2011-11-18"
                        },
                        {
                          "value": "A valid yearless date string: 11-18"
                        },
                        {
                          "value": "A valid week string: 2011-W47"
                        },
                        {
                          "value": "A valid time string: 14:54, 14:54:39, 14:54:39.929"
                        },
                        {
                          "value": "A valid local date and time string: 2011-11-18T14:54:39.929"
                        },
                        {
                          "value": "A valid global date and time string: 2011-11-18T14:54:39.929Z"
                        },
                        {
                          "value": "A valid duration string: PT4H18M3S"
                        }
                      ]
                    }
                  ],
                  "description": "Represents a specific period in time. It may include the datetime attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders",
                  "links": [
                    {
                      "title": "The time element in Safari and VoiceOver — jasha.eu",
                      "url":"https://www.jasha.eu/blogposts/2019/05/voiceover-safari-time-element.html"
                    },
                    {
                      "title": "CSS-tricks.com: The `time` Element",
                      "url": "https://css-tricks.com/time-element/"
                    },
                    {
                      "title": "Better Date Format with <time> Element",
                      "url": "https://pineco.de/better-date-format-with-time-element/"
                    },
                    {
                      "title": "MDN: The (Date) Time element",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-time-element",
                      "title": "HTML Spec: The time element"
                    }
                  ]
                },
                {
                  "tag": "<data>",
                  "name": "The Data element",
                  "description": "Links a given piece of content with a machine-readable translation",
                  "attributes": [
                    {
                      "name": "value",
                      "description": "Specifies the machine-readable translation of the content of the element"
                    }
                  ],
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-data-element",
                      "title": "HTML Spec: The data element"
                    }
                  ]
                },
                {
                  "tag": "<dfn>",
                  "name": "The Definition element",
                  "description": "Used to indicate the term being defined within the context of a definition phrase or sentence",
                  "links": [
                    {
                      "url": "https://jen4web.substack.com/p/dfn",
                      "title": "#30DaysofHTML Day 4: <dfn>"
                    },
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn",
                      "title": "MDN: The Definition element"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-dfn-element",
                      "title": "HTML Spec: The dfn element"
                    }
                  ],
                  "attributes": [
                    {
                      "name": "title",
                      "description": "The title attribute has a specific semantic meaning when used with the <dfn> element; it must contain the term being defined"
                    }
                  ]
                },
                {
                  "tag": "<del>",
                  "name": "The Deleted Text element",
                  "description": "Represents a range of text that has been deleted from a document. This can be used to show changes or source code diff's",
                  "links": [
                    {
                      "url": "https://css-tricks.com/copyediting-with-semantic-html/",
                      "title": "CSS-tricks.com: Copyediting with Semantic HTML"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-del-element",
                      "title": "HTML Spec: The del element"
                    },
                    {
                      "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#the-cite-and-datetime-attributes-for-deletions-insertions",
                      "title": "The cite And datetime Attributes For Deletions/Insertions",
                      "lastEdited": "2022-03-23"
                    }
                  ],
                  "attributes": [
                    {
                      "name": "cite",
                      "description": "A URI for a resource that explains the change (for example, meeting minutes)"
                    },
                    {
                      "name": "datetime",
                      "description": "Indicates the time and date of the change and must be a valid date string with an optional time"
                    }
                  ]
                },
                {
                  "tag": "<ins>",
                  "name": "The Inserted Text element",
                  "description": "Represents a range of text that has been added to a document",
                  "links": [
                    {
                      "url": "https://css-tricks.com/copyediting-with-semantic-html/",
                      "title": "CSS-tricks.com: Copyediting with Semantic HTML"
                    },
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-ins-element",
                      "title": "HTML Spec: The ins element"
                    }
                  ],
                  "attributes": [
                    {
                      "name": "cite",
                      "description": "A URI for a resource that explains the change (for example, meeting minutes)",
                      "type": "url"
                    },
                    {
                      "name": "datetime",
                      "description": "Indicates the time and date of the change and must be a valid date string with an optional time"
                    }
                  ]
                }
              ]
            },
            {
              "tag": "<span>",
              "name": "The Content Span element",
              "description": "Generic inline container for phrasing content, which does not inherently represent anything. It's div's little inline brother and it can be used to group elements for styling purposes (using the <code>class</code> or <code>id</code> attributes), or because they share attribute values, such as <code>lang</code>. It should be used only when no other semantic element is appropriate.",
              "tip": "Try to use more semantic elements before reaching for a span!",
              "type": "nonsemantic",
              "links": [
                {
                  "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-span-element",
                  "title": "HTML Spec: The span element"
                }
              ]
            },
            {
              "name": "Directional text",
              "description": "",
              "type": "group",
              "children": [
                {
                  "tag": "<bdo>",
                  "name": "The Bidirectional Text Override element",
                  "description": "Overrides the current directionality of text, so that the text within is rendered in the reverse direction",
                  "attributes": [
                    {
                      "name": "dir",
                      "description": "The direction in which text should be rendered in this element's contents",
                      "values": [
                        {
                          "name": "ltr",
                          "description": "Indicates that the text should go in a left-to-right direction"
                        },
                        {
                          "name": "rtl",
                          "description": "Indicates that the text should go in a right-to-left direction"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-bdo-element",
                      "title": "HTML Spec: The bdo element"
                    }
                  ]
                },
                {
                  "tag": "<bdi>",
                  "name": "The Bidirectional Isolate element",
                  "description": "Tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text",
                  "attributes": [
                    {
                      "name": "dir",
                      "description": "Text direction. For <bdi> this always defaults to auto",
                      "values": [
                        {
                          "value": "ltr",
                          "description": "Left-to-right"
                        },
                        {
                          "value": "rtl",
                          "description": "Right-to-left"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "url": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-bdi-element",
                      "title": "HTML Spec: The bdi element"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Interactive elements",
          "type": "group",
          "description": "Elements which help to create interactive user interface objects",
          "children": [
            {
              "tag": "<details>",
              "name": "The Details disclosure element",
              "links": [
                {
                  "url": "https://www.scottohara.me/blog/2022/09/12/details-summary.html",
                  "title": "Scott O'Hara: The details and summary elements, again"
                },
                {
                  "url": "https://adrianroselli.com/2020/05/disclosure-widgets.html",
                  "title": "Adrian Roselli: Disclosure Widgets"
                },
                {
                  "title": "justmarkup.com: Styling the details element",
                  "url": "https://justmarkup.com/articles/2020-09-22-styling-and-animation-details/"
                },
                {
                  "url": "https://css-tricks.com/quick-reminder-that-details-summary-is-the-easiest-way-ever-to-make-an-accordion/",
                  "title": "CSS-tricks.com: Quick Reminder that Details/Summary is the Easiest Way Ever to Make an Accordion"
                },
                {
                  "url": "https://css-tricks.com/exploring-what-the-details-and-summary-elements-can-do/",
                  "title": "CSS-tricks.com: Exploring What the Details and Summary Elements Can Do"
                }
              ],
              "description": "Creates a disclosure widget in which information is visible only when the widget is toggled into an 'open' state. A summary or label can be provided using the <summary> element",
              "attributes": [
                {
                  "name": "open",
                  "type": "boolean",
                  "description": "Indicates whether or not the details — that is, the contents of the <details> element — are currently visible. The default, false, means the details are not visible"
                }
              ],
              "children": [
                {
                  "tag": "<summary>",
                  "name": "The Disclosure Summary element",
                  "description": "Specifies a summary, caption, or legend for a <details> element's disclosure box. Clicking the <summary> element toggles the state of the parent <details> element open and closed"
                }
              ]
            },
            {
              "tag": "<dialog>",
              "name": "The Dialog element",
              "description": "Represents a dialog box or other interactive component. It’s not just a semantic element, it has baked-in interaction API's and special CSS like '::backdrop'.",
              "links": [
                {
                  "url": "https://tympanus.net/codrops/2021/10/06/how-to-implement-and-style-the-dialog-element",
                  "title": "Tympanus.net: How to Implement and Style the Dialog Element by Christian Kozella"
                },
                {
                  "url": "https://css-tricks.com/some-hands-on-with-the-html-dialog-element",
                  "title": "CSS-tricks.com: Some Hands-On with the HTML Dialog Element"
                },
                {
                  "url": "https://bitsofco.de/accessible-modal-dialog/",
                  "title": "bitsofcode: Creating An Accessible Modal Dialog"
                },
                {
                  "url": "https://web.dev/building-a-dialog-component/",
                  "title": "web.dev: Building a dialog component"
                }
              ],
              "attributes": [
                {
                  "name": "open",
                  "type": "boolean",
                  "description": "Indicates that the dialog is active and can be interacted with. When the 'open' attribute is not set, the dialog shouldn't be shown to the user"
                }
              ]
            },
            {
              "tag": "<a>",
              "name": "The Anchor Element",
              "tip": "Make sure your link always contains some text, hide it using CSS if you don't want to display it.",
              "description": "Anchor element with its href attribute creates a hyperlink to anything a URL can address. Content within each <a> should indicate the link's destination. The URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers: Sections of a page with fragment URLs, Pieces of media files with media fragments; Telephone numbers with tel: URLs; Email addresses with mailto: URLs",
              "attributes": [
                {
                  "name": "href",
                  "description": "The URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers like 'tel:' or 'mailto: or to breadcrumb id's.",
                  "type": "url",
                  "links": [
                    {
                      "url": "https://css-tricks.com/the-current-state-of-telephone-links/",
                      "title": "CSS-tricks.com: The Current State of Telephone Links"
                    }
                  ]
                },
                {
                  "name": "download",
                  "description": "Prompts the user to save the linked URL instead of navigating to it. Without a value, the browser will suggest a filename/extension. Defining a value suggests it as the filename",
                  "type": "url"
                },
                {
                  "name": "ping",
                  "description": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs. Typically used for tracking",
                  "type": "url"
                },
                {
                  "name": "media",
                  "description": "Specifies a hint of the media for which the linked resource was designed."
                },
                {
                  "name": "rel",
                  "description": "The relationship of the linked URL as space-separated link types",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel",
                      "title": "MDN: HTML attribute: rel"
                    },
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types",
                      "title": "MDN: Link types"
                    }
                  ],
                  "values": [
                    {
                      "value": "nofollow",
                      "description": "Indicates that the linked document is not endorsed by the author of this one. 'nofollow' tells search engines to ignore this link"
                    },
                    {
                      "value": "noopener",
                      "description": "When navigating to another page, 'noopener' instructs the browser to open the link without granting the new browsing context access to the document that opened it ",
                      "links": [
                        {
                          "url": "https://mathiasbynens.github.io/rel-noopener/",
                          "title": "Mathias Bynens: About rel=noopener"
                        },
                        {
                          "url": "https://web.dev/external-anchors-use-rel-noopener/",
                          "title": "web.dev: Links to cross-origin destinations are unsafe"
                        }
                      ]
                    },
                    {
                      "value": "noreferrer",
                      "description": "Prevents the browser, when navigating to another page, to send this page address, or any other value, as referrer via the Referer: HTTP header",
                      "links": [
                        {
                          "url": "https://web.dev/external-anchors-use-rel-noopener/",
                          "title": "web.dev: Links to cross-origin destinations are unsafe"
                        }
                      ]
                    },
                    {
                      "value": "alternate",
                      "description": ""
                    },
                    {
                      "value": "author",
                      "description": "Defines a hyperlink to a page describing the author or providing a way to contact the author"
                    },
                    {
                      "value": "bookmark",
                      "description": ""
                    },
                    {
                      "value": "external",
                      "description": "Indicates that the referenced document is not part of the same site as the current document"
                    },
                    {
                      "value": "help",
                      "description": ""
                    },
                    {
                      "value": "next",
                      "description": "Indicates that the hyperlink leads to the next resource of the sequence the current page is in"
                    },
                    {
                      "value": "prev",
                      "description": "Indicates that the hyperlink leads to the preceding resource of the sequence the current page is in"
                    },
                    {
                      "value": "search",
                      "description": "Indicates that the hyperlink references a document whose interface is specially designed for searching in this document, or site"
                    }
                  ]
                },
                {
                  "name": "target",
                  "description": "Where to display the linked URL, as the name for a browsing context (a tab, window, or <iframe>)",
                  "type": "semi-enumarated",
                  "values": [
                    {
                      "value": "_self",
                      "description": "(Default) the current browsing context"
                    },
                    {
                      "value": "_blank",
                      "description": "usually opens in a new tab, but it is strongly discouraged. Do not arbitrarily open links in a new tab. If you are required to do so anyway, inform users in text",
                      "links": [
                        {
                          "title": "Jens Oliver Meiert: When to Open Links in a New Tab",
                          "url": "https: //meiert.com/en/blog/links-in-new-tabs/"
                        },
                        {
                          "url": "https://web.dev/external-anchors-use-rel-noopener/",
                          "title": "web.dev: Links to cross-origin destinations are unsafe"
                        },
                        {
                          "url": "https://css-tricks.com/use-target_blank/",
                          "title": "CSS-tricks.com: When to use target='_blank'"
                        }
                      ]
                    },
                    {
                      "value": "_parent",
                      "description": "the parent browsing context of the current one. If no parent, behaves as _self. It is strongly discouraged to arbitrarily open links in a new window. If you are required to do so anyway, inform users in text."
                    },
                    {
                      "value": "_top",
                      "description": "the topmost browsing context. If ther are no higher browsing context, behaves as _self"
                    }
                  ]
                }
              ],
              "links": [
                {
                  "title": "Adrian Roselli: Link Targets and 3.2.5",
                  "url": "https://adrianroselli.com/2020/02/link-targets-and-3-2-5.html"
                },
                {
                  "title": "MDN: The Anchor Element",
                  "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"
                },
                {
                  "url": "https://yatil.net/blog/buttons-vs-links",
                  "title": "Eric Eggert: Buttons vs. Links; No, they are not the same"
                },
                {
                  "url": "https://css-tricks.com/a-complete-guide-to-links-and-buttons/",
                  "title": "CSS-tricks: A Complete Guide to Links and Buttons"
                }
              ]
            },
            {
              "name": "Input & output",
              "type": "group",
              "description": "Elements to enter input (ie controls) and a few elements to show output. Most of these can be form-associated content but are not necessarily.",
              "children": [
                {
                  "name": "Input",
                  "type": "group",
                  "description": "Elements to let users define input",
                  "children": [
                    {
                      "tag": "<button>",
                      "name": "The Button element",
                      "type": "form-associated",
                      "description": "represents a clickable button, used to submit forms or anywhere in a document for accessible, standard button functionality",
                      "attributes": [
                        {
                          "name": "autofocus",
                          "type": "boolean",
                          "description": "Specifies that the button should have input focus when the page loads. Only one element in a document can have this attribute"
                        },
                        {
                          "name": "disabled",
                          "type": "boolean",
                          "description": "Prevents the user from interacting with the button: it cannot be pressed or focused."
                        },
                        {
                          "name": "form",
                          "description": "The <form> element to associate the button with (its form owner). The value of this attribute must be the id of a <form> in the same document. (If this attribute is not set, the <button> is associated with its ancestor <form> element, if any.) This attribute lets you associate <button> elements to <form>s anywhere in the document, not just inside a <form>. It can also override an ancestor <form> element",
                          "type": "id"
                        },
                        {
                          "name": "formaction",
                          "description": "The URL that processes the information submitted by the button. Overrides the action attribute of the button's form owner. Does nothing if there is no form owner."
                        },
                        {
                          "name": "formenctype",
                          "type": "enumarated",
                          "description": "If the button is a submit button (it's inside/associated with a <form> and doesn't have type='button'), specifies how to encode the form data that is submitted",
                          "values": [
                            {
                              "value": "application/x-www-form-urlencoded",
                              "description": "The default if the attribute is not used"
                            },
                            {
                              "value": "multipart/form-data",
                              "description": "Use to submit <input> elements with their type attributes set to file."
                            },
                            {
                              "value": "text/plain",
                              "description": "Specified as a debugging aid; shouldn’t be used for real form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner."
                            }
                          ]
                        },
                        {
                          "name": "formmethod",
                          "type": "enumarated",
                          "description": "If the button is a submit button (it's inside/associated with a <form> and doesn't have type='button'), this attribute specifies the HTTP method used to submit the form.",
                          "values": [
                            {
                              "value": "post",
                              "description": "The data from the form are included in the body of the HTTP request when sent to the server. Use when the form contains information that shouldn’t be public, like login credentials."
                            },
                            {
                              "value": "get",
                              "description": "The form data are appended to the form's action URL, with a ? as a separator, and the resulting URL is sent to the server. Use this method when the form has no side effects, like search forms. If specified, this attribute overrides the method attribute of the button's form owner"
                            }
                          ]
                        },
                        {
                          "name": "formnovalidate",
                          "type": "boolean",
                          "description": "If the button is a submit button, this specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner. This attribute is also available on <input type='image'> and <input type='submit'> elements."
                        },
                        {
                          "name": "formtarget",
                          "description": "If the button is a submit button, this attribute is a author-defined name or standardized, underscore-prefixed keyword indicating where to display the response from submitting the form. This is the name of, or keyword for, a browsing context (a tab, window, or <iframe>). If this attribute is specified, it overrides the target attribute of the button's form owner. The following keywords have special meanings:",
                          "type": "semi-enumarated",
                          "values": [
                            {
                              "value": "_self",
                              "description": "(default): Load into the same browsing context as the current one"
                            },
                            {
                              "value": "_blank",
                              "description": "Load into a new unnamed browsing context"
                            },
                            {
                              "value": "_parent",
                              "description": "Load into the parent browsing context of the current one. If no parent, behaves the same as _self"
                            },
                            {
                              "value": "_top",
                              "description": "Load into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one and has no parent). If no parent, behaves the same as _self"
                            }
                          ]
                        },
                        {
                          "name": "name",
                          "description": "The name of the button, submitted as a pair with the button’s value as part of the form data"
                        },
                        {
                          "name": "type",
                          "description": "specifies the default behavior of the button",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "submit",
                              "description": "The button submits the form data to the server. This is the default if the attribute is not specified for buttons associated with a <form>, or if the attribute is an empty or invalid value"
                            },
                            {
                              "value": "reset",
                              "description": "The button resets all the controls to their initial values, like <input type='reset'>. (This is not recommended)"
                            },
                            {
                              "value": "button",
                              "description": "The button has no default behavior, and does nothing when pressed by default. It can have client-side scripts listen to the element's events, which are triggered when the events occur"
                            }
                          ]
                        },
                        {
                          "name": "value",
                          "description": "Defines the value associated with the button’s name when it’s submitted with the form data. This value is passed to the server in params when the form is submitted"
                        }
                      ],
                      "links": [
                        {
                          "url": "https://yatil.net/blog/buttons-vs-links",
                          "title": "Eric Eggert: Buttons vs. Links; No, they are not the same"
                        },
                        {
                          "url": "https://css-tricks.com/use-button-element",
                          "title": "CSS-tricks.com: When To Use The Button Element"
                        }
                      ]
                    },
                    {
                      "tag": "<form>",
                      "name": "The Form Element",
                      "description": "A container for interactive form controls for submitting information. Forms can't be nested inside each other.",
                      "tip": "Style a <form> element based on whether or not the elements inside the form are valid using the `:valid` and `:invalid` CSS pseudo-classes.",
                      "attributes": [
                        {
                          "name": "accept-charset",
                          "description": "Space-separated character encodings the server accepts. The browser uses them in the order in which they are listed. The default value means the same encoding as the page"
                        },
                        {
                          "name": "autocomplete",
                          "description": "Indicates whether input elements can by default have their values automatically completed by the browser. autocomplete attributes on form elements override it on <form>",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "off",
                              "description": "Don't let the browser automatically complete entries"
                            },
                            {
                              "value": "on",
                              "description": "Do let the browser automatically complete entries"
                            }
                          ],
                          "links": [
                            {
                              "url": "https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#The_autocomplete_attribute_and_login_fields",
                              "title": "MDN: The autocomplete attribute and login fields"
                            }
                          ]
                        },
                        {
                          "name": "rel"
                        },
                        {
                          "name": "action",
                          "description": "The URL that processes the form submission. This value can be overridden by a 'formaction' attribute on a <button>, <input type='submit'>, or <input type='image'> element",
                          "type": "url"
                        },
                        {
                          "name": "enctype",
                          "description": "If the value of the method attribute is <code>POST</code>, enctype is the MIME type of the form submission. Possible values. This value is overridden by formmethod attributes on <button>, <input type='submit'>, or <input type='image'> elements",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "application/x-www-form-urlencoded",
                              "description": "Default"
                            },
                            {
                              "value": "multipart/form-data",
                              "description": "Use this if the form contains <input> elements with type=file"
                            },
                            {
                              "value": "text/plain",
                              "description": "Useful for for debugging purposes"
                            }
                          ]
                        },
                        {
                          "name": "method",
                          "description": "The HTTP method to submit the form with",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "post",
                              "description": "The POST method; form data sent as the request body"
                            },
                            {
                              "value": "get",
                              "description": "The GET method; form data appended to the action URL with a ? separator. Use this method when the form has no side-effects"
                            },
                            {
                              "value": "dialog",
                              "description": "When the form is inside a <dialog>, closes the dialog on submission"
                            }
                          ]
                        },
                        {
                          "name": "novalidate",
                          "description": "Indicates that the form shouldn't be validated when submitted. If this attribute is not set and therefore the form is validated, it can be overridden by a 'formnovalidate' attribute on a <button>, <input type='submit'>, or <input type='image'> element belonging to the form",
                          "type": "boolean"
                        },
                        {
                          "name": "target",
                          "description": "Indicates where to display the response after submitting the form. It is a name/keyword for a browsing context (for example, tab, window, or iframe). The following keywords have special meanings",
                          "type": "semi-enumarated",
                          "values": [
                            {
                              "value": "_self",
                              "description": "(default): Load into the same browsing context as the current one"
                            },
                            {
                              "value": "_blank",
                              "description": "Load into a new unnamed browsing context"
                            },
                            {
                              "value": "_parent",
                              "description": "Load into the parent browsing context of the current one. If no parent, behaves the same as _self"
                            },
                            {
                              "value": "_top",
                              "description": "Load into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one and has no parent). If no parent, behaves the same as _self"
                            }
                          ]
                        }
                      ],
                      "links": [
                        {
                          "title": "web.dev: Learn HTML Forms",
                          "url": "https://web.dev/learn/forms/"
                        },
                        {
                          "title": "Jens Oliver Meiert: HTML Concepts: Form Owners",
                          "url": "https://meiert.com/en/blog/html-form-owners/",
                          "lastEdited": "2021-12-18"
                        }
                      ]
                    },
                    {
                      "tag": "<fieldset>",
                      "name": "The Field Set element",
                      "description": "Used to group several controls as well as <label> within a form. `<fieldset>` can be a child of another `<fieldset>`.",
                      "type": "form-associated",
                      "attributes": [
                        {
                          "name": "disabled",
                          "description": "If this attribute is set, all form controls that are descendants of the `<fieldset>`, are disabled, meaning they are not editable and won't be submitted along with the `<form>`. They won't receive any browsing events, like mouse clicks or focus-related events. Note that form elements inside the `<legend>` element won't be disabled. Fieldsets can be nested, if the parent `<fieldset>` is disabled, all it's descendant `<fieldset>`s will be disabled",
                          "type": "boolean"
                        },
                        {
                          "name": "form",
                          "description": "This attribute takes the value of the id attribute of a `<form>` element you want the `<fieldset>` to be part of, even if it is not inside the form. Please note that usage of this is confusing — if you want the `<input>` elements inside the `<fieldset>` to be associated with the form, you need to use the form attribute directly on those elements. You can check which elements are associated with a form via JavaScript, using `HTMLFormElement.elements`",
                          "type": "id"
                        },
                        {
                          "name": "name",
                          "description": "Name of the element to use in the `form.elements` API."
                        }
                      ],
                      "links": [
                        {
                          "title": "Adrian Roselli: Use Legend and Fieldset",
                          "url": "https://adrianroselli.com/2022/07/use-legend-and-fieldset.html"
                        },
                        {
                          "url": "https://accessibility.blog.gov.uk/2016/07/22/using-the-fieldset-and-legend-elements/",
                          "title": "gov.uk Blog: Using the fieldset and legend elements"
                        },
                        {
                          "title": "HTML Spec: The fieldset element",
                          "url": "https://html.spec.whatwg.org/multipage/form-elements.html#the-fieldset-element"
                        },
                        {
                          "title": "Tomas Pustelnik: Don't ignore Fieldset and Legend HTML elements",
                          "url": "https://pustelto.com/blog/dont-ignore-fieldset-and-legend-html-elements/"
                        }
                      ],
                      "children": [
                        {
                          "tag": "<legend>",
                          "name": "The Field Set Legend element",
                          "description": "Represents a caption for the content of its parent `<fieldset>`. It should be the first child of a `<fieldset>` element"
                        }
                      ]
                    },
                    {
                      "tag": "<input>",
                      "name": "The Input (Form Input) element",
                      "type": "group form-associated",
                      "tip": "Be sure to always add an associated `<label>` to each input element!",
                      "links": [
                        {
                          "title": "MDN: The HTML5 input types",
                          "url": "https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types"
                        }
                      ],
                      "description": "Oh boy, `<input>`, how versatile of an element. Technically, `<input>` is just a single element, but really it's many elements disguised as one. Depending on its `type` attribute, it can take on different roles that are also visually very different. Precisely because the input elements appearance is so different depending on its type – and each type has its own applicable attributes – I've cheated and made `<input>` a group with each type listed as a child. (even though technically they're all the same element)",
                      "attributes": [
                        {
                          "name": "autocomplete",
                          "description": "Indicates whether input elements can by default have their values automatically completed by the browser. autocomplete attributes on form elements override it on <form>. Browsers and password managers have very good heuristics to find login forms on web pages but it doesn't always go right. Using the autocomplete attribute will make it very obvious",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "off",
                              "description": "Don't let the browser automatically complete entries"
                            },
                            {
                              "value": "on",
                              "description": "Do let the browser automatically complete entries"
                            },
                            {
                              "value": "email",
                              "description": "An email address."
                            },
                            {
                              "value": "username",
                              "description": "A username or account name."
                            },
                            {
                              "value": "new-password",
                              "description": "A new password. When creating a new account or changing passwords, this should be used for an 'Enter your new password' or 'Confirm new password' field, as opposed to a general 'Enter your current password' field that might be present. This may be used by the browser both to avoid accidentally filling in an existing password and to offer assistance in creating a secure password."
                            },
                            {
                              "value": "current-password",
                              "description": "The user's current password."
                            },
                            {
                              "value": "one-time-code",
                              "description": "A one-time code used for verifying user identity."
                            },
                            {
                              "value": "organization-title",
                              "description": " A job title, or the title a person has within an organization, such as 'Senior Technical Writer', 'President', or 'Assistant Troop Leader'"
                            },
                            {
                              "value": "organization",
                              "description": " A company or organization name"
                            },
                            {
                              "value": "street-address",
                              "description": " A street address. This can be multiple lines of text, and should fully identify the location of the address within its second administrative level (typically a city or town), but should not include the city name, ZIP or postal code, or country name"
                            },
                            {
                              "value": "address-line1/address-line2/address-line3",
                              "description": "Each individual line of the street address. These should only be present if the 'street-address' is not present"
                            },
                            {
                              "value": "address-level4",
                              "description": " The finest-grained administrative level, in addresses which have four levels."
                            },
                            {
                              "value": "address-level3",
                              "description": "The third administrative level, in addresses with at least three administrative levels."
                            },
                            {
                              "value": "address-level2",
                              "description": "The second administrative level, in addresses with at least two of them. In countries with two administrative levels, this would typically be the city, town, village, or other locality in which the address is located."
                            },
                            {
                              "value": "address-level1",
                              "description": "The first administrative level in the address. This is typically the province in which the address is located. In the United States, this would be the state. In Switzerland, the canton. In the United Kingdom, the post town."
                            },
                            {
                              "value": "country",
                              "description": "A country or territory code."
                            },
                            {
                              "value": "country-name",
                              "description": "A country or territory name."
                            },
                            {
                              "value": "postal-code",
                              "description": "A postal code (in the United States, this is the ZIP code)."
                            },
                            {
                              "value": "cc-name",
                              "description": "The full name as printed on or associated with a payment instrument such as a credit card. Using a full name field is preferred, typically, over breaking the name into pieces."
                            },
                            {
                              "value": "cc-given-name",
                              "description": " A given (first) name as given on a payment instrument like a credit card."
                            },
                            {
                              "value": "cc-additional-name",
                              "description": "A middle name as given on a payment instrument or credit card."
                            },
                            {
                              "value": "cc-family-name",
                              "description": " A family name, as given on a credit card."
                            },
                            {
                              "value": "cc-number",
                              "description": "A credit card number or other number identifying a payment method, such as an account number."
                            },
                            {
                              "value": "cc-exp",
                              "description": "A payment method expiration date, typically in the form 'MM/YY' or 'MM/YYYY'."
                            },
                            {
                              "value": "cc-exp-month",
                              "description": " The month in which the payment method expires."
                            },
                            {
                              "value": "cc-exp-year",
                              "description": " The year in which the payment method expires."
                            },
                            {
                              "value": "cc-csc",
                              "description": "The security code for the payment instrument; on credit cards, this is the 3-digit verification number on the back of the card."
                            },
                            {
                              "value": "cc-type",
                              "description": "The type of payment instrument (such as 'Visa' or 'Master Card')."
                            },
                            {
                              "value": "transaction-currency",
                              "description": "The currency in which the transaction is to take place."
                            },
                            {
                              "value": "transaction-amount",
                              "description": "The amount, given in the currency specified by 'transaction-currency', of the transaction, for a payment form."
                            },
                            {
                              "value": "language",
                              "description": "A preferred language, given as a valid BCP 47 language tag."
                            },
                            {
                              "value": "bday",
                              "description": "A birth date, as a full date."
                            },
                            {
                              "value": "bday-day",
                              "description": "The day of the month of a birth date."
                            },
                            {
                              "value": "bday-month",
                              "description": " The month of the year of a birth date."
                            },
                            {
                              "value": "bday-year",
                              "description": "The year of a birth date."
                            },
                            {
                              "value": "sex",
                              "description": "A gender identity, as freeform text without newlines."
                            },
                            {
                              "value": "tel",
                              "description": " A full telephone number, including the country code. If you need to break the phone number up into its components, you can use these values for those fields:"
                            },
                            {
                              "value": "tel-country-code",
                              "description": "The country code, such as '1' for the United States, Canada, and other areas in North America and parts of the Caribbean."
                            },
                            {
                              "value": "tel-national",
                              "description": "The entire phone number without the country code component, including a country-internal prefix. For the phone number '1-855-555-6502', this field's value would be '855-555-6502'"
                            },
                            {
                              "value": "tel-area-code",
                              "description": " The area code, with any country-internal prefix applied if appropriate."
                            },
                            {
                              "value": "tel-local",
                              "description": "The phone number without the country or area code. This can be split further into two parts, for phone numbers which have an exchange number and then a number within the exchange. For the phone number '555-6502', use 'tel-local-prefix' for '555' and 'tel-local-suffix' for '6502'"
                            },
                            {
                              "value": "tel-extension",
                              "description": " A telephone extension code within the phone number, such as a room or suite number in a hotel or an office extension in a company."
                            },
                            {
                              "value": "impp",
                              "description": " A URL for an instant messaging protocol endpoint, such as 'xmpp:username@example.net'"
                            },
                            {
                              "value": "url",
                              "description": " A URL, such as a home page or company web site address as appropriate given the context of the other fields in the form."
                            },
                            {
                              "value": "photo",
                              "description": " The URL of an image representing the person, company, or contact information given in the other fields in the form."
                            }
                          ],
                          "links": [
                            {
                              "url": "https://www.twilio.com/blog/html-attributes-two-factor-authentication-autocomplete",
                              "title": "Twilio Blog: HTML attributes to improve your users' two factor authentication experience"
                            },
                            {
                              "url": "https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#The_autocomplete_attribute_and_login_fields",
                              "title": "MDN: Turning off form autocompletion - The autocomplete attribute and login fields"
                            }
                          ]
                        },
                        {
                          "name": "autocapitalize",
                          "description": "controls whether and how text input is automatically capitalized as it is entered/edited by the user. The autocapitalize attribute never causes autocapitalization to be enabled for an <input> element with a type attribute whose value is url, email, or password",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "off or none",
                              "description": "No autocapitalization is applied (all letters default to lowercase)"
                            },
                            {
                              "value": "on or sentences",
                              "description": "The first letter of each sentence defaults to a capital letter; all other letters default to lowercase"
                            },
                            {
                              "value": "words",
                              "description": "The first letter of each word defaults to a capital letter; all other letters default to lowercase"
                            },
                            {
                              "value": "characters",
                              "description": "All letters should default to uppercase"
                            }
                          ]
                        },
                        {
                          "name": "inputmode",
                          "links": [
                            {
                              "title": "CSSTricks.com: Everything You Ever Wanted to Know About inputmode",
                              "url": "https://css-tricks.com/everything-you-ever-wanted-to-know-about-inputmode/"
                            }
                          ],
                          "description": "The inputmode attribute controls what kind of virtual keyboard will be used. Unlike changing the type of the form, inputmode doesn’t change the way the browser interprets the input — it only instructs the browser which keyboard to display.",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "text (default)",
                              "description": "Brings up the default input keyboard"
                            },
                            {
                              "value": "none",
                              "description": "No virtual keyboard. For when the page implements its own keyboard input control."
                            },
                            {
                              "value": "decimal",
                              "description": "Fractional numeric input keyboard containing the digits and decimal separator for the user's locale (typically . or ,). Devices may or may not show a minus key (-)"
                            },
                            {
                              "value": "numeric",
                              "description": "Numeric input keyboard, but only requires the digits 0–9. Devices may or may not show a minus key. Using the numeric value with an input of type='text' may actually make more sense than setting the input to type='number' alone because inputmode='numeric' can be used with maxlength, minlength and pattern attributes, making it more versatile for different use cases."
                            },
                            {
                              "value": "tel",
                              "description": "A telephone keypad input, including the digits 0–9, the asterisk (*), and the pound (#) key. Inputs that require a telephone number should typically use type='tel' instead."
                            },
                            {
                              "value": "search",
                              "description": "A virtual keyboard optimized for search input. For instance, the return/submit key may be labeled “Search”, along with possible other optimizations. Inputs that require a search query should typically use type='search' instead"
                            },
                            {
                              "value": "email",
                              "description": "A virtual keyboard optimized for entering email addresses. Typically includes the @ character as well as other optimizations. Inputs that require email addresses should typically use type='email' instead."
                            },
                            {
                              "value": "url",
                              "description": "A keypad optimized for entering URLs. This may have the / key more prominent, for example. Enhanced features could include history access and so on. Inputs that require a URL should typically use 'url' instead"
                            }
                          ]
                        },
                        {
                          "name": "name",
                          "description": "A string specifying a name for the input control. This name is submitted along with the control's value when the form data is submitted"
                        },
                        {
                          "name": "disabled",
                          "type": "boolean",
                          "description": "if present, indicates that the user should not be able to interact with the input. Disabled inputs are typically rendered with a dimmer color or using some other form of indication that the field is not available for use. Disabled inputs are not submitted with the form"
                        },
                        {
                          "name": "form",
                          "description": "A string specifying the <form> element with which the input is associated. This string's value, must match the id of a <form> element in the same document. If this attribute isn't specified, the <input> element is associated with the nearest containing form, if any. The form attribute lets you place an input anywhere in the document but have it included with a form elsewhere in the document. Note that an input can only be associated with one form",
                          "type": "id"
                        },
                        {
                          "name": "value",
                          "description": "The input control's value. When specified in the HTML, this is the initial value, and from then on it can be altered or retrieved at any time using JavaScript to access the respective HTMLInputElement object's value property. The value attribute is always optional, though should be considered mandatory for checkbox, radio, and hidden."
                        }
                      ],
                      "children": [
                        {
                          "name": "'button'",
                          "description": "While <input> elements of type 'button' are still perfectly valid HTML, the newer <button> element is now the favored way to create buttons. Given that a <button>’s label text is inserted between the opening and closing tags, you can include HTML in the label, even images.",
                          "notrecommended": true
                        },
                        {
                          "name": "'color'",
                          "description": "provide a user interface element that lets a user specify a color, either by using a visual color picker interface or by entering the color into a text field in #rrggbb hexadecimal format. The look of the element may vary substantially from one browser and/or platform",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            }
                          ],
                          "links": [
                            {
                              "title": "CSS-tricks.com: Datalist is for suggesting values without enforcing values",
                              "url": "https://css-tricks.com/datalist-is-for-suggesting-values-without-enforcing-values/"
                            }
                          ]
                        },
                        {
                          "name": "'checkbox'",
                          "description": "A check box allowing single values to be selected/deselected",
                          "attributes": [
                            {
                              "name": "checked",
                              "type": "boolean",
                              "description": "If present, the checkbox is toggled on by default. It does not indicate whether this checkbox is currently checked: if the checkbox’s state is changed, this content attribute does not reflect the change"
                            },
                            {
                              "name": "indeterminate",
                              "type": "boolean",
                              "description": "If present, indicates that the value of the checkbox is indeterminate rather than true or false"
                            },
                            {
                              "name": "value",
                              "description": "The string to use as the value of the checkbox when submitting the form, if the checkbox is currently toggled on. For type='checkbox' the 'value' attribute is required.",
                              "type": "mandatory"
                            }
                          ],
                          "tip": [
                            {
                              "text": "Style it with the CSS <code>accent-color</code> property.",
                              "links": [
                                {
                                  "title": "web.dev: CSS accent-color",
                                  "url": "https://web.dev/accent-color/"
                                },
                                {
                                  "text": "Use the `:checked` psuedo-class to style checkbox elements when they are in the selected state",
                                  "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:checked"
                                }
                              ]
                            }
                          ],
                          "links": [
                            {
                              "url": "https://css-tricks.com/zero-trickery-custom-radios-and-checkboxes/",
                              "title": "CSS-tricks.com: Zero Trickery Custom Radios and Checkboxes"
                            }
                          ]
                        },
                        {
                          "name": "'date'",
                          "description": "create input fields that let the user enter a date, either with a textbox that validates the input or a special date picker interface. The resulting value includes the year, month, and day, but not the time. Use type='time' or type='datetime-local' input types to support time or date & time input",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "defines the greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value."
                            },
                            {
                              "name": "min",
                              "description": "defines the most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied."
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the email input should not be user-editable"
                            }
                          ],
                          "links": [
                            {
                              "title": "Adrian Roselli: Maybe You Don’t Need a Date Picker",
                              "url": "https://adrianroselli.com/2019/07/maybe-you-dont-need-a-date-picker.html"
                            }
                          ]
                        },
                        {
                          "name": "'datetime-local'",
                          "description": "create input controls that let the user easily enter both a date and a time, including the year, month, and day as well as the time in hours and minutes",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "defines the greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value."
                            },
                            {
                              "name": "min",
                              "description": "defines the most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied."
                            },
                            {
                              "name": "readonly",
                              "description": "If present, indicates that the input's value can't be edited",
                              "type": "boolean"
                            }
                          ]
                        },
                        {
                          "name": "'email'",
                          "description": "used to let the user enter and edit an e-mail address, or, if the multiple attribute is specified, a list of e-mail addresses",
                          "attributes": [
                            {
                              "name": "inputmode='email'",
                              "description": "A virtual keyboard optimized for entering email addresses. Typically includes the @ character as well as other optimizations"
                            },
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the email input should not be user-editable"
                            }
                          ]
                        },
                        {
                          "name": "'file'",
                          "description": "A control that lets the user select a file",
                          "attributes": [
                            {
                              "name": "multiple",
                              "type": "boolean",
                              "description": "let the user choose more than one file"
                            },
                            {
                              "name": "accept",
                              "description": "defines which file types are selectable in a file upload control"
                            }
                          ]
                        },
                        {
                          "name": "'hidden'",
                          "description": "A control that is not displayed but whose value is submitted to the server. It always needs its 'value' attribute to be set",
                          "attributes": [
                            {
                              "name": "value",
                              "description": "Represents the value of the hidden data you want to pass back to the server."
                            }
                          ]
                        },
                        {
                          "name": "'month'",
                          "description": "A control for entering a month and year, with no time zone",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "defines the greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value."
                            },
                            {
                              "name": "min",
                              "description": "defines the most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied."
                            },
                            {
                              "name": "readonly",
                              "description": "If present, indicates that the input's value can't be edited",
                              "type": "boolean"
                            },
                            {
                              "name": "step",
                              "description": "For month inputs, the value of step is given in months, with a scaling factor of 1 (since the underlying numeric value is also in months). The default value of step is 1 month."
                            }
                          ]
                        },
                        {
                          "name": "'image'",
                          "description": "",
                          "attributes": [
                            {
                              "name": "height",
                              "description": "height of the image file to display to represent the graphical submit button",
                              "type": "pixel"
                            },
                            {
                              "name": "width",
                              "description": "The width of the image file to display to represent the graphical submit button",
                              "type": "pixel"
                            }
                          ]
                        },
                        {
                          "name": "'number'",
                          "description": "A control for entering a number. Displays a spinner and adds default validation when supported. Displays a numeric keypad in some devices with dynamic keypads. However, type='number' isn’t appropriate for all numbers. The number input performs input sanitization by default. Therefore it is not suitable for things like credit numerical id's like credit card numbers or postal code.",
                          "links": [
                            {
                              "url": "https://css-tricks.com/what-to-use-instead-of-number-inputs/",
                              "title": "CSS-tricks.com: What to Use Instead of Number Inputs"
                            }
                          ],
                          "attributes": [
                            {
                              "name": "step",
                              "description": "a number that specifies the granularity that the value must adhere to. The value must be a positive number—integer or float—or the special value any, which means no stepping is implied. For type='number' it defaults to 1."
                            },
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "defines the greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value."
                            },
                            {
                              "name": "min",
                              "description": "defines the most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied."
                            },
                            {
                              "name": "readonly",
                              "description": "If present, indicates that the input's value can't be edited",
                              "type": "boolean"
                            }
                          ],
                          "tip": {
                            "text": "Use the <code>:in-range</code> and <code>:out-of-range</code> CSS pseudo-class to style input element whose current value is outside the range limits specified by the <code>min</code> and <code>max</code> attributes."
                          }
                        },
                        {
                          "name": "'password'",
                          "description": "<input> elements of type password provide a way for the user to securely enter a password. The element is presented as a one-line plain text editor control in which the text is obscured so that it cannot be read, usually by replacing each character with a symbol such as the asterisk (*) or a dot",
                          "attributes": [
                            {
                              "value": "maxlength",
                              "description": "The maximum length the value may be",
                              "type": "integer"
                            },
                            {
                              "value": "minlength",
                              "description": "The minimum length in characters that will be considered valid",
                              "type": "integer"
                            },
                            {
                              "value": "pattern",
                              "description": "A regular expression the value must match in order to be valid"
                            },
                            {
                              "value": "placeholder",
                              "description": "An example value to display in the field when the field is empty"
                            },
                            {
                              "value": "readonly",
                              "description": "If present, indicates that the field's contents should not be editable",
                              "type": "boolean"
                            },
                            {
                              "value": "size",
                              "description": "The number of characters wide the input field should be",
                              "type": "integer"
                            }
                          ]
                        },
                        {
                          "name": "'radio'",
                          "description": "A radio button, allowing a single value to be selected out of multiple choices with the same name value. Note that radio buttons are a bit different from the other HTML input types because you need a group of them to be useful, each radio input in this group needs to have the same 'name' attribute. Checkboxes are similar to radio buttons, but with an important distinction: radio buttons are designed for selecting one value out of a set, whereas checkboxes let you turn individual values on and off. Where multiple controls exist, radio buttons allow one to be selected out of them all, whereas checkboxes allow multiple values to be selected.",
                          "attributes": [
                            {
                              "name": "name",
                              "description": "The name attribute creates a unique behavior for radio buttons. Only one radio button in a group of radio buttons with the same name can be checked at a time. Selecting any radio button in that group automatically deselects any currently-selected radio button in the same group. The value of that one checked radio button is sent along with the name if the form is submitted."
                            },
                            {
                              "name": "checked",
                              "description": "Indicates that that radio button is the currently selected one in the group of same-named radio buttons.",
                              "type": "boolean"
                            },
                            {
                              "name": "value",
                              "description": "Contains the radio button's value. The value is never shown to the user. Instead, it's used to identify which radio button in a group is selected. when a form is submitted, only radio buttons which are currently checked are submitted to the server, and the reported value is the value of the value attribute. If the value is not otherwise specified, it is the string 'on' by default",
                              "type": "mandatory"
                            }
                          ],
                          "links": [
                            {
                              "url": "https://css-tricks.com/zero-trickery-custom-radios-and-checkboxes/",
                              "title": "CSS-tricks.com: Zero Trickery Custom Radios and Checkboxes"
                            }
                          ]
                        },
                        {
                          "name": "'range'",
                          "description": "A control for entering a number whose exact value is not important. Displays as a range widget defaulting to the middle value. Used in conjunction min and max to define the range of acceptable values",
                          "links": [
                            {
                              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range",
                              "title": "MDN Input range"
                            }
                          ],
                          "attributes": [
                            {
                              "name": "step",
                              "description": "a number that specifies the granularity that the value must adhere to. The value must be a positive number—integer or float—or the special value any, which means no stepping is implied. For type='range' it defaults to 1",
                              "type": "number"
                            },
                            {
                              "name": "list",
                              "description": "The id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "The greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.",
                              "type": "number"
                            },
                            {
                              "name": "min",
                              "description": "The most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied.",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "name": "'reset'",
                          "description": "A button that resets the contents of the form to default values. Not recommended",
                          "type": "notrecommended"
                        },
                        {
                          "name": "'search'",
                          "description": "A single-line text field for entering search strings. Line-breaks are automatically removed from the input value. May include a delete icon in supporting browsers that can be used to clear the field. Displays a search icon instead of enter key on some devices with dynamic keypads. Generally you need not bother with type='search'. It offers little to no benefit. Use 'text' instead.",
                          "links": [
                            {
                              "title": "Adrian Roselli: Maybe Ignore type='search'",
                              "url": "https://adrianroselli.com/2019/07/ignore-typesearch.html"
                            },
                            {
                              "title": "MDN: <input type='search'>",
                              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search"
                            },
                            {
                              "title": "CSS-tricks.com: What do you get for using a search input type?",
                              "url": "https://css-tricks.com/what-do-you-get-for-using-a-search-input-type/"
                            }
                          ],
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "inputmode='search'",
                              "description": "Brings up a virtual keyboard optimized for search input. For instance, the return/submit key may be labeled “Search”, along with possible other optimizations"
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the search input should not be user-editable"
                            }
                          ]
                        },
                        {
                          "name": "'submit'",
                          "description": "Submits the form when clicked, rendered as a button",
                          "attributes": [
                            {
                              "name": "formaction",
                              "description": "The URL to which to submit the form's data; overrides the form's action attribute, if any",
                              "type": "url"
                            },
                            {
                              "name": "formenctype",
                              "description": "A string specifying the encoding type to use for the form data"
                            },
                            {
                              "name": "formmethod",
                              "description": "The HTTP method (get or post) to use when submitting the form.",
                              "type": "enumarated",
                              "value": [
                                {
                                  "name": "get",
                                  "description": ""
                                },
                                {
                                  "name": "post",
                                  "description": ""
                                }
                              ]
                            },
                            {
                              "name": "formnovalidate",
                              "description": "If present, means the form's fields will not be subjected to constraint validation before submitting the data to the server",
                              "type": "boolean"
                            },
                            {
                              "name": "formtarget",
                              "description": "The browsing context into which to load the response returned by the server after submitting the form"
                            }
                          ]
                        },
                        {
                          "name": "'tel'",
                          "description": "A control for entering a telephone number. Displays a telephone keypad on smartphones and tablets",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value. The style of the list produced by a <datalist> element is platform-dependent",
                              "type": "id"
                            },
                            {
                              "name": "inputmode='tel'",
                              "description": "Brings up virtual keypad optimized for entering telephone numbers; a telephone keypad input, including the digits 0–9, the asterisk (*), and the pound (#) key."
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the telephone input should not be user-editable"
                            }
                          ]
                        },
                        {
                          "name": "'text'",
                          "description": "This is the default, it's just a plain text entry field",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            }
                          ]
                        },
                        {
                          "name": "'time'",
                          "description": "A control for entering a time value with no time zone",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "The string indicating the latest time to accept, specified in the same time value format as described above. If the specified string isn't a valid time, no maximum value is set.",
                              "type": "number"
                            },
                            {
                              "name": "min",
                              "description": "A string specifying the earliest time to accept, given in the time value format described previously. If the value specified isn't a valid time string, no minimum value is set.",
                              "type": "number"
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the time input should not be user-editable"
                            },
                            {
                              "name": "step",
                              "description": "The stepping interval to use both for user interfaces purposes and during constraint validation",
                              "type": "number"
                            }
                          ]
                        },
                        {
                          "name": "'url'",
                          "description": "A field for entering a URL. Looks like a text input, but has validation parameters and relevant keyboard in supporting browsers and devices with virtual keyboards like smartphones and tablets",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "inputmode='url'",
                              "description": "hints that a URL will be entered by the user. On touch devices it brings up a keypad optimized for entering URLs. This may have the 'enter' key more prominent, for example"
                            },
                            {
                              "name": "readonly",
                              "type": "boolean",
                              "description": "If present, indicates that the contents of the url input should not be user-editable"
                            }
                          ]
                        },
                        {
                          "name": "'week'",
                          "description": "create input fields allowing easy entry of a year plus the ISO 8601 week number during that year (i.e., week 1 to 52 or 53)",
                          "attributes": [
                            {
                              "name": "list",
                              "description": "The value given to the list attribute should be the id of a <datalist> element located in the same document. The <datalist> provides a list of predefined values to suggest to the user for this input. Any values in the list that are not compatible with the type are not included in the suggested options. The values provided are suggestions, not requirements: users can select from this predefined list or provide a different value.",
                              "type": "id"
                            },
                            {
                              "name": "max",
                              "description": "defines the greatest value in the range of permitted values. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.",
                              "type": "number"
                            },
                            {
                              "name": "min",
                              "description": "defines the most negative value in the range of permitted values. If the value entered into the element is less than this this, the element fails constraint validation. If the value of the min attribute isn't a number, then the element has no minimum value. This value must be less than or equal to the value of the max attribute. If the min attribute is present but is not specified or is invalid, no min value is applied.",
                              "type": "number"
                            },
                            {
                              "name": "readonly",
                              "description": "If present, indicates that the input's value can't be edited",
                              "type": "boolean"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "tag": "<textarea>",
                      "name": "The Textarea element",
                      "description": "Represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text",
                      "type": "replacedelement form-associated",
                      "attributes": [
                        {
                          "name": "rows",
                          "description": "The number of visible text lines for the control.",
                          "type": "integer"
                        },
                        {
                          "name": "cols",
                          "description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is 20",
                          "type": "integer"
                        },
                        {
                          "name": "inputmode",
                          "description": "Provides a hint as to the type of data that might be entered by the user while editing the element or its contents, it instructs the browser which keyboard to display"
                        },
                        {
                          "name": "disabled",
                          "description": "This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example <fieldset>; if there is no containing element when the disabled attribute is set, the control is enabled."
                        },
                        {
                          "name": "form",
                          "description": "The form element that the <textarea> element is associated with (its 'form owner'). The value of the attribute must be the id of a form element in the same document. If this attribute is not specified, the <textarea> element must be a descendant of a form element. This attribute enables you to place <textarea> elements anywhere within a document, not just as descendants of form elements.",
                          "type": "id"
                        },
                        {
                          "name": "autofocus",
                          "title": "Specifies that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified",
                          "type": "boolean"
                        },
                        {
                          "name": "maxlength",
                          "description": "The maximum number of characters (UTF-16 code units) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters."
                        },
                        {
                          "name": "minlength",
                          "description": "The minimum number of characters (UTF-16 code units) required that the user should enter."
                        },
                        {
                          "name": "name",
                          "description": "The name of the textarea for use in the `<form>`."
                        },
                        {
                          "name": "placeholder",
                          "description": "A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint."
                        },
                        {
                          "name": "readonly",
                          "description": "This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the disabled attribute, the readonly attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form."
                        },
                        {
                          "name": "required",
                          "description": "This attribute specifies that the user must fill in a value before submitting a form."
                        },
                        {
                          "name": "spellcheck",
                          "description": "Specifies whether the <textarea> is subject to spell checking by the underlying browser/OS.",
                          "values": [
                            {
                              "value": "true",
                              "description": "Indicates that the element needs to have its spelling and grammar checked."
                            },
                            {
                              "value": "default",
                              "description": "Indicates that the element is to act according to a default behavior, possibly based on the parent element's own spellcheck value."
                            },
                            {
                              "value": "false",
                              "description": " Indicates that the element should not be spell checked."
                            }
                          ]
                        }
                      ],
                      "links": [
                        {
                          "url": "https://design-system.service.gov.uk/components/textarea/",
                          "title": "Gov.uk Design : <textarea>"
                        }
                      ]
                    },
                    {
                      "tag": "<label>",
                      "tip": "Describe every form control with a <label> rather than using some other HTML element. Don't use `<label>` without an associated `<input>`.",
                      "name": "The Input Label element",
                      "description": "Represents a caption for an item in a user interface. It is (almost?) always associated with an <input> element",
                      "attributes": [
                        {
                          "name": "for",
                          "description": "Describes elements which belongs to this one. The `id` of a labelable form-related element in the same document. The first element in the document with an id matching the value of the for attribute is the labeled control for this label element. If it is not labelable then the `for` attribute has no effect. If there are other elements that also match the id value, later in the document, they are not considered",
                          "type": "id"
                        }
                      ],
                      "links": [
                        {
                          "url": "https://css-tricks.com/html-inputs-and-labels-a-love-story/",
                          "title": "CSS-tricks.com: HTML Inputs and Labels: A Love Story",
                          "lastEdited": "2021-04-02"
                        }
                      ]
                    },
                    {
                      "tag": "<select>",
                      "name": "The Select element",
                      "description": "represents a control that provides a menu of options",
                      "type": "compound form-associated",
                      "attributes": [
                        {
                          "name": "autofocus",
                          "description": "Lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the autofocus attribute",
                          "type": "boolean"
                        },
                        {
                          "name": "disabled",
                          "description": "indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example <fieldset>; if there is no containing element with the disabled attribute set, then the control is enabled",
                          "type": "boolean"
                        },
                        {
                          "name": "form",
                          "description": "The <form> element to associate the <select> with (its form owner). The value of this attribute must be the id of a <form> in the same document. (If this attribute is not set, the <select> is associated with its ancestor <form> element, if any.). This attribute lets you associate <select> elements to <form>s anywhere in the document, not just inside a <form>. It can also override an ancestor <form> element",
                          "type": "id"
                        },
                        {
                          "name": "multiple",
                          "type": "boolean",
                          "description": "If present, indicates that multiple options can be selected in the list. If not specified, then only one option can be selected at a time. When multiple is specified, most browsers will show a scrolling list box instead of a single line dropdown"
                        },
                        {
                          "name": "name",
                          "description": "used to specify the name of the control"
                        }
                      ],
                      "children": [
                        {
                          "tag": "<option>",
                          "name": "The Option Element",
                          "description": "used to define an item contained in a <select>, an <optgroup>, or a <datalist> element",
                          "type": "replacedelement",
                          "attributes": [
                            {
                              "name": "disabled",
                              "description": "If present, this option is not selectable. Often browsers grey out such control and it won't receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one of its ancestors is a disabled <optgroup> element",
                              "type": "boolean"
                            },
                            {
                              "name": "label",
                              "description": "This attribute is text for the label indicating the meaning of the option. If the label attribute isn't defined, its value is that of the element text content"
                            },
                            {
                              "name": "selected",
                              "description": "If present, indicates that the option is initially selected. If the <option> element is the descendant of a <select> element whose multiple attribute is not set, only one single <option> of this <select> element may have the selected attribute",
                              "type": "boolean"
                            },
                            {
                              "name": "value",
                              "description": "The content of this attribute represents the value to be submitted with the form, should this option be selected. If this attribute is omitted, the value is taken from the text content of the option element"
                            }
                          ]
                        },
                        {
                          "tag": "<optgroup>",
                          "name": "The Option Group Element",
                          "description": "Group multiple <options> together",
                          "links": [
                            {
                              "title": "Those HTML Attributes You Never Use: The label Attribute For The <optgroup> Element",
                              "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#the-label-attribute-for-the-optgroup-element",
                              "lastEdited": "2022-03-23"
                            }
                          ],
                          "children": [
                            {
                              "link": "<option>"
                            }
                          ],
                          "attributes": [
                            {
                              "name": "label",
                              "type": "mandatory",
                              "description": "The name of the group of options, which the browser can use when labeling the options in the user interface"
                            },
                            {
                              "name": "disabled",
                              "type": "boolean",
                              "description": "If set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "tag": "<datalist>",
                      "name": "The HTML Data List element",
                      "description": "contains a set of <option> elements that represent the permissible or recommended options available to choose from within a <select> or <input> element. Options can be tagged with datalist and referenced from the input element using list attribute by its id",
                      "links": [
                        {
                          "title": "CSS-tricks.com: Datalist is for suggesting values without enforcing values",
                          "url": "https://css-tricks.com/datalist-is-for-suggesting-values-without-enforcing-values/",
                          "lastEdited": "2019-07-26"
                        },
                        {
                          "title": "CSS-tricks.com: Datalists for Different Input Types",
                          "url": "https://css-tricks.com/datalists-different-input-types/",
                          "lastEdited": "2020-04-26"
                        },
                        {
                          "title": "Jules Own datalist experiment page TODO MAKE MY OWN",
                          "url": "COMING SOON"
                        }
                      ],
                      "attributes": [
                        {
                          "name": "id",
                          "description": "An id is required in order for the datalist to be referenced by a <select> or <input> element",
                          "type": "mandatory"
                        }
                      ],
                      "children": [
                        {
                          "link": "<option>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Output",
                  "description": "Elements that display output ",
                  "type": "group",
                  "children": [
                    {
                      "tag": "<meter>",
                      "name": "The Meter element",
                      "description": "Represents either a scalar value within a known range or a fractional value",
                      "attributes": [
                        {
                          "name": "value",
                          "description": "The current numeric value. This must be between the minimum and maximum values (min attribute and max attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the min attribute and max attribute, the value is equal to the nearest end of the range.",
                          "type": "number"
                        },
                        {
                          "name": "min",
                          "description": "The lower numeric bound of the measured range. This must be less than the maximum value (max attribute), if specified. If unspecified, the minimum value is 0.",
                          "type": "number"
                        },
                        {
                          "name": "max",
                          "description": "The upper numeric bound of the measured range. This must be greater than the minimum value (min attribute), if specified. If unspecified, the maximum value is 1.",
                          "type": "number"
                        },
                        {
                          "name": "low",
                          "description": "The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (min attribute), and it also must be less than the high value and maximum value (high attribute and max attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the low value is equal to the minimum value.",
                          "type": "number"
                        },
                        {
                          "name": "high",
                          "description": "The lower numeric bound of the high end of the measured range. This must be less than the maximum value (max attribute), and it also must be greater than the low value and minimum value (low attribute and min attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the high value is equal to the maximum value.",
                          "type": "number"
                        },
                        {
                          "name": "optimum",
                          "description": "indicates the optimal numeric value. It must be within the range (as defined by the min attribute and max attribute). When used with the low attribute and high attribute, it gives an indication where along the range is considered preferable. For example, if it is between the min attribute and the low attribute, then the lower range is considered preferred. The browser may color the meter's bar differently depending on whether the value is less than or equal to the optimum value.",
                          "type": "number"
                        },
                        {
                          "name": "form",
                          "description": "The <form> element to associate the <meter> element with (its form owner). The value of this attribute must be the id of a <form> in the same document. If this attribute is not set, the <meter> is associated with its ancestor <form> element, if any. This attribute is only used if the <meter> element is being used as a form-associated element, such as one displaying a range corresponding to an <input type='number'>",
                          "type": "id"
                        }
                      ]
                    },
                    {
                      "tag": "<output>",
                      "name": "The Output element",
                      "type": "form-associated",
                      "description": "container element into which a site or app can inject the results of a calculation or the outcome of a user action",
                      "links": [
                        {
                          "title": "output: HTML's native live region element by Scott O'Hara",
                          "url": "https://www.scottohara.me/blog/2019/07/10/the-output-element.html",
                          "lastEdited": "2020-07-16"
                        }
                      ]
                    },
                    {
                      "tag": "<progress>",
                      "name": "The Progress Indicator element",
                      "description": "displays an indicator showing the completion progress of a task, typically displayed as a progress bar",
                      "attributes": [
                        {
                          "name": "max",
                          "description": "describes how much work the task indicated by the progress element requires. The max attribute, if present, must have a value greater than 0 and be a valid floating point number. The default value is 1",
                          "type": "float"
                        },
                        {
                          "name": "value",
                          "description": "specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max, or between 0 and 1 if max is omitted. If there is no value attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take",
                          "type": "float"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Structured containers",
          "description": "These are parent-child combinations of elements that work together to group content in a certain structure. ",
          "type": "group",
          "children": [
            {
              "tag": "<table>",
              "name": "The Table element",
              "description": "Represents tabular data — information presented in a table comprised of rows and columns of cells containing data. Table has its own layout mode `display: table;`",
              "tip": "The elements in a table have to follow a certain order!",
              "links": [
                {
                  "url": "https://html.spec.whatwg.org/multipage/tables.html#the-table-element",
                  "title": "HTML Spec: The table element"
                },
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables",
                  "title": "MDN: HTML Tables"
                },
                {
                  "url": "https://css-tricks.com/complete-guide-table-element",
                  "title": "CSS-tricks.com: Complete guide to the table element",
                  "lastEdited": "2021-08-2"
                },
                {
                  "url": "https://adrianroselli.com/2017/11/hey-its-still-ok-to-use-tables.html",
                  "title": "Adrian Roselli: Hey, It’s Still OK to Use Tables",
                  "lastEdited": "2020-09-29"
                },
                {
                  "url": "https://adrianroselli.com/2017/11/a-responsive-accessible-table.html",
                  "title": "Adrian Roselli: A Responsive Accessible Table",
                  "lastEdited": "2020-04-18"
                }
              ],
              "children": [
                {
                  "tag": "<caption>",
                  "name": "The Table Caption element",
                  "description": "Specifies the caption (or title) of a table. It should be the first child of its parent <table> element",
                  "tip": {
                    "text": "Control its position with the CSS property <code>caption-side: top | bottom;</code>",
                    "links": [
                      {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side",
                        "title": "MDN: caption-side"
                      }
                    ]
                  }
                },
                {
                  "tag": "<colgroup>",
                  "name": "The Table Column Group element",
                  "description": "Defines a group of columns within a table",
                  "links": [
                    {
                      "title": "Web Accessibility Tutorials: Tables with irregular headers",
                      "url": "https://www.w3.org/WAI/tutorials/tables/irregular/"
                    },
                    {
                      "url": "https://www.matuzo.at/blog/highlighting-columns",
                      "title": "Manuel Matuzovic: Highlighting columns in HTML tables",
                      "lastEdited": "2021-03-20"
                    }
                  ],
                  "attributes": [
                    {
                      "name": "span",
                      "description": "Indicates the number of consecutive columns the <colgroup> element spans with a positive integer. Default is 1",
                      "type": "integer"
                    }
                  ],
                  "children": [
                    {
                      "tag": "<col>",
                      "name": "The Table Column element",
                      "description": "Defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element. Since there are no columns in HTML tables – only rows and cells — the col element allows us to style columns anyway. The <col> element does not get rendered but can be used to style columns. If a class is added to the col element, it applies the styles from the class to all the cells in the column. ",
                      "type": "empty",
                      "tip": "Adding a class to the col element will apply the styles to all the cells in the column. https://www.matuzo.at/blog/highlighting-columns/",
                      "attributes": [
                        {
                          "name": "span",
                          "description": "Indicates the number of consecutive columns the <colgroup> element spans with a positive integer. Default is 1",
                          "type": "integer"
                        }
                      ]
                    }
                  ]
                },
                {
                  "tag": "<thead>",
                  "name": "The Table Head element",
                  "description": "Defines a set of rows defining the head of the columns of the table. If you are using <col>/<colgroup> element, the table header should come just below those.",
                  "children": [
                    {
                      "link": "<tr>"
                    }
                  ]
                },
                {
                  "tag": "<tbody>",
                  "name": "The Table Body element",
                  "description": "Encapsulates a set of table rows (<tr> elements), indicating that they comprise the body of the table. If you use <tbody>, you can't also have table rows (<tr> elements) which are direct children of the <table> but not included inside the <tbody>. All non-header and non-footer rows must be inside the <tbody> if one is used.",
                  "children": [
                    {
                      "link": "<tr>"
                    }
                  ]
                },
                {
                  "tag": "<tr>",
                  "name": "The Table Row element",
                  "description": "Defines a row of cells in a table. The row's cells can then be established using a mix of <td> (data cell) and <th> (header cell) elements",
                  "children": [
                    {
                      "tag": "<th>",
                      "name": "The Table Header element",
                      "description": "Header cell",
                      "attributes": [
                        {
                          "name": "scope",
                          "description": "Defines the cells that the header element relates to",
                          "type": "enumarated",
                          "values": [
                            {
                              "value": "row",
                              "description": "The header relates to all cells of the row it belongs to"
                            },
                            {
                              "value": "col",
                              "description": "The header relates to all cells of the column it belongs to"
                            },
                            {
                              "value": "rowgroup",
                              "description": "The header belongs to a rowgroup and relates to all of its cells. These cells can be placed to the right or the left of the header, depending on the value of the dir attribute in the <table> element"
                            },
                            {
                              "value": "rowspan",
                              "descrption": "Indicates for how many rows the cell extends with a non-negative integer value. Its default value is 1; if its value is set to 0, it extends until the end of the table section (<thead>, <tbody>, <tfoot>, even if implicitly defined), that the cell belongs to. Values higher than 65534 are clipped down to 65534.",
                              "type": "integer"
                            },
                            {
                              "value": "colgroup",
                              "description": "The header belongs to a colgroup and relates to all of its cells"
                            },
                            {
                              "value": "auto",
                              "description": "The default value"
                            }
                          ]
                        },
                        {
                          "name": "abbr",
                          "description": "An abbreviated description of the cell's content. Speech readers may present this description before the content itself"
                        },
                        {
                          "name": "colspan",
                          "description": "Indicates for how many columns the cell extends with a non-negative integer value. Its default value is 1. Values higher than 1000 will be considered as incorrect and will be set to the default value (1)",
                          "type": "integer"
                        },
                        {
                          "name": "headers",
                          "description": "A list of space-separated strings, each corresponding to the id attribute of the <th> elements that apply to this element. This method creates very precise associations between headers and data cells but it uses a lot more markup and does not leave any room for errors.  The scope approach is usually enough for most tables.",
                          "type": "id"
                        },
                        {
                          "name": "rowspan",
                          "description": "Indicates for how many rows the cell extends with a non-negative integer value. Its default value is 1; if its value is set to 0, it extends until the end of the table section (<thead>, <tbody>, <tfoot>, even if implicitly defined), that the cell belongs to. Values higher than 65534 are clipped down to 65534",
                          "type": "integer"
                        }
                      ]
                    },
                    {
                      "tag": "<td>",
                      "name": "The Table Data Cell element",
                      "description": "Defines a cell of a table that contains data",
                      "attributes": [
                        {
                          "name": "colspan",
                          "description": "A non-negative integer value that indicates for how many columns the cell extends. Its default value is 1",
                          "type": "integer"
                        },
                        {
                          "name": "rowspan",
                          "description": "A non-negative integer value that indicates for how many rows the cell extends. Its default value is 1; if its value is set to 0, it extends until the end of the table section (<thead>, <tbody>, <tfoot>, even if implicitly defined), that the cell belongs to",
                          "type": "integer"
                        },
                        {
                          "name": "headers",
                          "description": "A list of space-separated strings, each corresponding to the id attribute of the <th> elements that apply to this element",
                          "type": "id"
                        }
                      ]
                    }
                  ]
                },
                {
                  "tag": "<tfoot>",
                  "name": "The Table Foot element",
                  "description": "Defines a set of rows summarizing the columns of the table",
                  "children": [
                    {
                      "link": "<tr>"
                    }
                  ]
                }
              ]
            },
            {
              "tag": "<figure>",
              "name": "The Figure with Optional Caption element",
              "description": "Represents self-contained content, potentially with an optional caption, which is specified using the <figcaption> element. <figure> is often uses represent graphical content like images, illustrations and diagrams — but it can also be used for things like code, poems and quotes",
              "children": [
                {
                  "tag": "<figcaption>",
                  "name": "The Figure Caption element",
                  "description": "Represents a caption or legend describing the rest of the contents of its parent <figure> element"
                }
              ],
              "links": [
                {
                  "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#figures",
                  "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements Figure."
                },
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure",
                  "title": "MDN: The Figure with Optional Caption element"
                }
              ]
            },
            {
              "name": "Lists",
              "description": "Elements to make various types of lists",
              "type": "group",
              "children": [
                {
                  "tag": "<ul>",
                  "name": "The Unordered List element",
                  "description": "Represents an unordered list of items. Typically, unordered-list items are displayed with a bullet. The <ul> and <ol> elements may be nested as deeply as desired. Moreover, the nested lists may alternate between <ol> and <ul> without restriction",
                  "children": [
                    {
                      "link": "<ul>"
                    },
                    {
                      "link": "<ol>"
                    },
                    {
                      "tag": "<li>",
                      "name": "The List Item element",
                      "description": "Used to represent an item in a list. It must be contained in a parent element: an ordered list (<ol>), an unordered list (<ul>)",
                      "attributes": [
                        {
                          "name": "value",
                          "description": "Used to change the numbering in an ordered list.",
                          "type": "integer"
                        }
                      ]
                    }
                  ],
                  "tip": "Style the list markers with the `::marker` pseudoselector"
                },
                {
                  "tag": "<ol>",
                  "name": "The Ordered List element",
                  "description": "Represents an ordered list of items. Ordered list items display with a preceding marker, such as a number or letter. The <ol> and <ul> elements may nest as deeply as desired, alternating between <ol> and <ul> however you like",
                  "tip": {
                    "text": "Style the list markers with the `::marker` pseudoselector",
                    "links": [
                      {
                        "url": "https://web.dev/css-marker-pseudo-element",
                        "title": "web.dev: Custom bullets with CSS ::marker"
                      }
                    ]
                  },
                  "attributes": [
                    {
                      "name": "reversed",
                      "description": "Specifies that the list’s items are in reverse order. Items will be numbered from high to low",
                      "type": "boolean"
                    },
                    {
                      "name": "start",
                      "description": "An integer to start counting from for the list items. Always an Arabic numeral (1, 2, 3, etc.), even when the numbering type is letters or Roman numerals. For example, to start numbering elements from the letter 'd' or the Roman numeral 'iv', use start='4'",
                      "type": "integer"
                    },
                    {
                      "name": "type",
                      "description": "Sets the numbering type",
                      "type": "enumarated",
                      "values": [
                        {
                          "value": "a",
                          "description": "for lowercase letters"
                        },
                        {
                          "value": "A",
                          "description": "for uppercase letters"
                        },
                        {
                          "value": "i",
                          "description": "for lowercase Roman numerals"
                        },
                        {
                          "value": "I",
                          "description": "for uppercase Roman nuerals"
                        },
                        {
                          "value": "1",
                          "description": "for numbers (default)"
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "link": "<ul>"
                    },
                    {
                      "link": "<ol>"
                    },
                    {
                      "link": "<li>"
                    }
                  ],
                  "links": [
                    {
                      "url": "https://www.matuzo.at/blog/reverse-ordered-lists/",
                      "title": "Manuel Matuzovic: Reverse ordered lists",
                      "lastEdited": "2020-06-04"
                    },
                    {
                      "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#attributes-for-custom-ordered-lists",
                      "title": "Those HTML Attributes You Never Use: Attributes For Custom Ordered Lists",
                      "lastEdited": "2022-03-23"
                    }
                  ]
                },
                {
                  "tag": "<dl>",
                  "name": "The Description List element",
                  "description": "Represents a description list. The element encloses a list of groups of terms (specified using the <dt> element) and descriptions (provided by <dd> elements). Common uses for this element are to implement a glossary or to display metadata. I think this element is overlooked",
                  "children": [
                    {
                      "tag": "<dt>",
                      "name": "The Description Term element",
                      "description": "The Description Term element specifies a term in a description or definition list, and as such must be used inside a <dl> element. It is usually followed by a <dd> element; however, multiple <dt> elements in a row indicate several terms that are all defined by the immediate next <dd> element"
                    },
                    {
                      "tag": "<dd>",
                      "name": "The Description Details element",
                      "description": "The Description Details element provides the definition or other related text associated with the term specified using <dt>. One <dt> can have multiple <dd>s."
                    }
                  ],
                  "links": [
                    {
                      "title": "CSS-tricks.com: Sticky Definition Lists",
                      "url": "https://css-tricks.com/sticky-definition-lists/"
                    },
                    {
                      "title": "Ben Myers: On the <dl>",
                      "url": "https://benmyers.dev/blog/on-the-dl/"
                    },
                    {
                      "title": "CSS-tricks.com: Utilizing the Underused (But Semantically Awesome) Definition List",
                      "url": "https://css-tricks.com/utilizing-the-underused-but-semantically-awesome-definition-list/"
                    }
                  ]
                },
                {
                  "tag": "<menu>",
                  "name": "The Menu element",
                  "description": "Is a semantic alternative to <ul>. It represents an unordered list of items (represented by <li> elements), each of these represent a link or other command that the user can activate. The key difference is that <ul> primarily contains items for display, whilst <menu> is intended for interactive items, to act on",
                  "type": "experimental",
                  "links": [
                    {
                      "title": "Scott O'Hara: Semantic <menu> context",
                      "url": "https://www.scottohara.me/blog/2021/10/21/menu.html"
                    }
                  ],
                  "children": [
                    {
                      "link": "<li>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Content sectioning",
          "description": "Elements to structure the document into logical sections",
          "type": "group",
          "links": [
            {
              "title": "CSS-tricks.com: How to Section Your HTML",
              "url": "https://css-tricks.com/how-to-section-your-html/"
            }
          ],
          "children": [
            {
              "name": "Section Headings",
              "type": "group",
              "description": "<h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest. Avoid skipping heading levels: always start from <h1>, followed by <h2> and so on. People who use screen readers rely on heading elements to navigate the page. Don't use heading level for styling! That's a a job for CSS.",
              "tip": "Always add id's to heading so they can be referenced by anchors.",
              "children": [
                {
                  "tag": "<h1>",
                  "name": "Section Heading level 1",
                  "description": "Using more than one <h1> is allowed by the HTML specification, but is not considered a best practice. Using only one <h1> is beneficial for screenreader users."
                },
                {
                  "tag": "<h2>",
                  "name": "Section Heading level 2",
                  "description": "Make sure there's an <h1> on the page already before using it"
                },
                {
                  "tag": "<h3>",
                  "name": "Section Heading level 3",
                  "description": "Make sure it follows <h1> and <h2>"
                },
                {
                  "tag": "<h4>",
                  "name": "Section Heading level 4",
                  "description": "Make sure it follows <h1>, <h2>, and <h3>"
                },
                {
                  "tag": "<h5>",
                  "name": "Section Heading level 5",
                  "description": "Make sure it follows <h1>, <h2>, <h3> and <h4>"
                },
                {
                  "tag": "<h6>",
                  "name": "Section Heading level 6",
                  "description": "Make sure it follows <h1>, <h2>, <h3>, <h4>, and <h5>"
                }
              ],
              "links": [
                {
                  "title": "Use Less Divs: The 7th heading",
                  "url": "https://uselessdivs.com/blog/the-7th-heading"
                }
              ]
            },
            {
              "tag": "<p>",
              "name": "The Paragraph element",
              "description": "Represents a paragraph. In HTML, paragraphs can be any structural grouping of related content, such as images or form fields, not just text!"
            },
            {
              "tag": "<div>",
              "name": "The Generic Container element",
              "description": " The <div> does not give the content any additional meaning, so if possible and appropriate prefer more meaningful elements but still divs have their place. It has no effect on the layout until styled using CSS.",
              "type": "nonsemantic",
              "tip": "Try to use a more meaningful element before resorting to a <div>.",
              "links": []
            },
            {
              "tag": "<hr>",
              "name": "The Thematic Break element",
              "description": "Represents a thematic break between paragraph-level elements: for example, a change of scene in a story. Historically, this has been presented as a horizontal rule or line. While it may still be displayed as a horizontal rule in visual browsers, this element is now defined in semantic terms, rather than presentational terms, so if you wish to draw a horizontal line, you should do so using appropriate CSS",
              "type": "empty",
              "links": [
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr",
                  "title": "MDN: The Thematic Break"
                }
              ]
            },
            {
              "tag": "<pre>",
              "name": "The Preformatted Text element",
              "description": "Represents preformatted text which is to be presented exactly as written in the HTML file, all whitespace is honored. This is useful if you want to show example code (say CSS) on your page.",
              "links": [
                {
                  "title": "CSS-tricks.com: Make <pre> text wrap",
                  "url": "https://css-tricks.com/snippets/css/make-pre-text-wrap/"
                },
                {
                  "title": "CSS-tricks.com: Considerations for styling the `pre` tag",
                  "url": "https://css-tricks.com/considerations-styling-pre-tag/"
                }
              ]
            },
            {
              "name": "Landmarks / Content sectioning",
              "description": "Content sections. Landmarks can be used (by assistive technology) to easily identify parts of a page.",
              "type": "group",
              "children": [
                {
                  "tag": "<header>",
                  "name": "The Header element",
                  "description": "Represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements"
                },
                {
                  "tag": "<nav>",
                  "name": "The Navigation Section element",
                  "description": "Represents a section of a page whose purpose is to provide navigation links",
                  "tip": "Don't nest navs inside each other"
                },
                {
                  "tag": "<main>",
                  "name": "The Main Content element",
                  "description": "Represents the dominant content of the <body> of a document. It is not supposed to feature any side bars or navigation elements in it. A document mustn't have more than one <main> element.",
                  "type": "unique",
                  "links": [
                    {
                      "title": "CSS-tricks.com: How to Section Your HTML",
                      "url": "https: //css-tricks.com/how-to-section-your-html/#the-main-element"
                    },
                    {
                      "title": "Adrian Roselli: Use Only One <main> on a page",
                      "url": "https://adrianroselli.com/2015/09/use-only-one-main-on-a-page.html"
                    }
                  ]
                },
                {
                  "tag": "<article>",
                  "name": "The Article Contents element",
                  "description": "Represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable",
                  "links": [
                    {
                      "title": "Bruce Lawson: Why You Should Choose HTML5 <article> Over <section>",
                      "url": "https://www.smashingmagazine.com/2020/01/html5-article-section/"
                    }
                  ]
                },
                {
                  "tag": "<section>",
                  "name": "The Generic Section element",
                  "description": "Represents a standalone section. The <section>’s exposed role and purpose change when you label it using aria-label, aria-labelledby or with the title attribute. Labelling it using these attributes turns it into a landmark, which exposes a different role (region).",
                  "links": [
                    {
                      "title": "Bruce Lawson: Why You Should Choose HTML5 <article> Over <section>",
                      "url": "https://www.smashingmagazine.com/2020/01/html5-article-section/"
                    },
                    {
                      "title": "Scott O'Hara: Accessibility of the section element",
                      "url": "https://www.scottohara.me/blog/2021/07/16/section.html"
                    },
                    {
                      "title": "HTMLHell.dev: the section element",
                      "url": "https://www.htmhell.dev/tips/the-section-element/"
                    },
                    {
                      "title": "Bruce Lawson: Why You Should Choose HTML5 <article> Over <section>",
                      "url": "https://www.smashingmagazine.com/2020/01/html5-article-section/"
                    }
                  ]
                },
                {
                  "tag": "<aside>",
                  "name": "The Aside element",
                  "description": "Represents a portion of a document whose content is only indirectly related to the document's main content. It's a good place to put a table of contents, or related posts.",
                  "tip": "Don't nest asides inside each other"
                },
                {
                  "tag": "<footer>",
                  "name": "The Footer element",
                  "description": "Represents a footer for its nearest sectioning content or sectioning root element"
                }
              ]
            },
            {
              "name": "Block-level content-specific",
              "description": "These are inline text element that signify a meaning. These can help you organize the written content on your pages and give information about the content to search engines and screen readers.",
              "type": "group",
              "children": [
                {
                  "tag": "<address>",
                  "name": "The Contact Address element",
                  "description": "Indicates that the enclosed HTML provides contact information for a person or people, or for an organization. The <address> element can only be used to represent the contact information for its nearest <article> or <body> element ancestor. For other adresses, it is recommended to use the <p> tag.",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address",
                      "title": "MDN: The Contact Address Element"
                    }
                  ]
                },
                {
                  "tag": "<blockquote>",
                  "name": "The Block Quotation element",
                  "description": "Indicates that the enclosed text is an extended quotation",
                  "links": [
                    {
                      "url": "https://css-tricks.com/quoting-in-html-quotations-citations-and-blockquotes/",
                      "title": "CSS-tricks.com: Quoting in HTML, quations,citations and blockquotes"
                    },
                    {
                      "url": "https://css-tricks.com/html-elements-unite-the-voltron-like-powers-of-combining-elements/#cite-and-blockquote",
                      "title": "CSS-tricks.com: HTML elements, unite! The Voltron-like powers of combining elements Keyboard, Sample and Variable."
                    }
                  ],
                  "attributes": [
                    {
                      "name": "cite",
                      "description": "A URL that designates a source document or message for the information quoted",
                      "type": "url"
                    }
                  ]
                }
              ]
            }
          ]
        },

        {
          "name": "Meta",
          "description": "A few meta elements that go in <head> can also go into <body>, and <template> is a weird meta kind of element too.",
          "type": "group",
          "children": [
            {
              "tag": "<noscript> (body)",
              "name": "The Noscript element",
              "description": "Defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser. This is useful if your page relies on a JavaScript framework like React or Vue to render elements. When it is a descendant of the <body> element: it can only contain elements that if those elements were removed, the content would still be valid HTML."
            },
            {
              "link": "<script>"
            },
            {
              "name": "Web Components",
              "type": "group",
              "links": [
                {
                  "url": "https://developer.mozilla.org/en-US/docs/Web/Web_Components",
                  "title": "MDN: Web Components"
                },
                {
                  "title": "Rich Harris: Why I don't use web components",
                  "url": "https: //dev.to/richharris/why-i-don-t-use-web-components-2cia"
                }
              ],
              "children": [
                {
                  "tag": "<template>",
                  "name": "The Content Template element",
                  "description": "The <template> HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript. Think of a template as a content fragment that is being stored for subsequent use in the document. While the parser does process the contents of the <template> element while loading the page, it does so only to ensure that those contents are valid; the element's contents are not rendered, however.",
                  "attributes": [],
                  "links": [
                    {
                      "title": "MDN:",
                      "url": "https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots"
                    }
                  ]
                },
                {
                  "tag": "<slot>",
                  "name": "The Content Template element",
                  "description": "The <template> HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript. Think of a template as a content fragment that is being stored for subsequent use in the document. While the parser does process the contents of the <template> element while loading the page, it does so only to ensure that those contents are valid; the element's contents are not rendered, however.",
                  "attributes": []
                }
              ]
            }
          ]
        },
        {
          "name": "Embeds",
          "type": "group",
          "description": "I think of these elements as embedded 'portals' to non-HTML stuff - Images, video, audio, WebGL, PDF documents, or SVG, or other HTML pages.",
          "children": [
            {
              "tag": "<portal>",
              "name": "The Portal element",
              "type": "experimental",
              "description": "It's the love child of the iframe and the anchor tag. Enables the embedding of another HTML page into the current one for the purposes of allowing smoother navigation into new pages. A <portal> is similar to an <iframe>. An <iframe> allows a separate browsing context to be embedded. However, the embedded content of a <portal> is more limited than that of an <iframe>. It cannot be interacted with, and therefore is not suitable for embedding widgets into a document. Instead, the <portal> acts as a preview of the content of another page. It can be navigated into therefore allowing for seamless transition to the embedded content.",
              "attributes": [
                {
                  "name": "referrerpolicy",
                  "description": "Sets the referrer policy to use when requesting the page at the URL given as the value of the src attribute."
                },
                {
                  "name": "src",
                  "description": "The URL of the page to embed.",
                  "type": "url"
                }
              ],
              "links": [
                {
                  "title": "web.dev: Hands-on with Portals: seamless navigation on the web",
                  "url": "https://web.dev/hands-on-portals/"
                },
                {
                  "title": "Securitum: Security analysis of <portal> element",
                  "url": "https://research.securitum.com/security-analysis-of-portal-element/"
                }
              ]
            },
            {
              "tag": "<picture>",
              "name": "The Picture element",
              "description": "Contains zero or more <source> elements and one <img> element to offer alternative versions of an image for different display/device scenarios. It is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers ",
              "children": [
                {
                  "tag": "<source>",
                  "name": "The Media or Image Source element",
                  "description": "Specifies multiple media resources",
                  "type": "empty ",
                  "attributes": [
                    {
                      "name": "media",
                      "description": "Media query of the resource's intended media.",
                      "type": "mediaquery"
                    },
                    {
                      "name": "sizes",
                      "description": "Is a list of source sizes that describes the final rendered width of the image represented by the source. Each source size consists of a comma-separated list of media condition-length pairs. This information is used by the browser to determine, before laying the page out, which image defined in srcset to use. Please note that sizes will have its effect only if width dimension descriptors are provided with srcset instead of pixel ratio values (200w instead of 2x for example). The sizes attribute has an effect only when the <source> element is the direct child of a <picture> element."
                    },
                    {
                      "name": "src",
                      "description": "Required for <audio> and <video>, address of the media resource. The value of this attribute is ignored when the <source> element is placed inside a <picture> element."
                    },
                    {
                      "name": "srcset",
                      "description": "A list of one or more strings separated by commas indicating a set of possible images represented by the source for the browser to use. Each string is composed of: <ol> <li>One URL specifying an image.</li> <li>A width descriptor, which consists of a string containing a positive integer directly followed by 'w', such as 300w. The default value, if missing, is the infinity.</li> <li>A pixel density descriptor, that is a positive floating number directly followed by 'x'. The default value, if missing, is 1x.</li></ul>Each string in the list must have at least a width descriptor or a pixel density descriptor to be valid. Among the list, there must be only one string containing the same tuple of width descriptor and pixel density descriptor. The browser chooses the most adequate image to display at a given point of time. The srcset attribute has an effect only when the <source> element is the direct child of a <picture> element."
                    },
                    {
                      "name": "type",
                      "description": "The MIME media type of the resource, optionally with a codecs parameter."
                    }
                  ]
                },
                {
                  "link": "<img>"
                }
              ],
              "links": [
                {
                  "title": "Josh Comeau: Embracing modern image formats; 'picture' to the rescue!",
                  "url": "https://www.joshwcomeau.com/performance/embracing-modern-image-formats/#picture-to-the-rescue"
                },
                {
                  "title": "CSS-tricks.com: A Guide to the Responsive Images Syntax in HTML",
                  "url": "https://css-tricks.com/a-guide-to-the-responsive-images-syntax-in-html/"
                },
                {
                  "title": "MDN: Responsive Images Tutorial",
                  "url": "https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images"
                }
              ]
            },
            {
              "tag": "<img>",
              "name": "The Image Embed element",
              "description": "Embeds an image into the document",
              "type": "empty replacedelement",
              "attributes": [
                {
                  "name": "alt",
                  "description": "Defines an alternative text description of the image. Omitting alt altogether indicates that the image is a key part of the content and no textual equivalent is available"
                },
                {
                  "name": "width",
                  "description": "The intrinsic width of the image in pixels. Must be an integer without a unit."
                },
                {
                  "name": "height",
                  "description": "The intrinsic height of the image, in pixels. Must be an integer without a unit."
                },
                {
                  "name": "srcset",
                  "description": "One or more strings separated by commas, indicating possible image sources for the user agent to use. Each string is composed of: A URL to an image Optionally, whitespace followed by one of: A width descriptor (a positive integer directly followed by w). The width descriptor is divided by the source size given in the sizes attribute to calculate the effective pixel density. A pixel density descriptor (a positive floating point number directly followed by x)."
                },
                {
                  "name": "src",
                  "description": "The image URL. Mandatory for the <img> element. On browsers supporting srcset, src is treated like a candidate image with a pixel density descriptor 1x, unless an image with this pixel density descriptor is already defined in srcset, or unless srcset contains w descriptors."
                },
                {
                  "name": "referrerpolicy",
                  "description": "A string indicating which referrer to use when fetching the resource",
                  "type": "enumarated",
                  "values": [
                    {
                      "value": "no-referrer",
                      "description": "The Referer header will not be sent."
                    },
                    {
                      "value": "no-referrer-when-downgrade",
                      "description": "The Referer header will not be sent to origins without TLS (HTTPS)."
                    },
                    {
                      "value": "origin",
                      "description": "The sent referrer will be limited to the origin of the referring page its scheme, host, and port."
                    },
                    {
                      "value": "origin-when-cross-origin",
                      "description": "The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path."
                    },
                    {
                      "value": "same-origin",
                      "description": "A referrer will be sent for same origin, but cross-origin requests will contain no referrer information."
                    },
                    {
                      "value": "strict-origin",
                      "description": "Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don't send it to a less secure destination (HTTPS→HTTP)."
                    },
                    {
                      "value": "strict-origin-when-cross-origin (default)",
                      "description": "Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP)."
                    },
                    {
                      "value": "unsafe-url",
                      "description": "The referrer will include the origin and the path (but not the fragment, password, or username). This value is unsafe, because it leaks origins and paths from TLS-protected resources to insecure origins."
                    }
                  ]
                },
                {
                  "name": "sizes",
                  "description": "One or more strings separated by commas, indicating a set of source sizes. Each source size consists of: 1. A media condition: This must be omitted for the last item in the list. 2. A source size value. Media Conditions describe properties of the viewport, not of the image. For example, (max-height: 500px) 1000px proposes to use a source of 1000px width, if the viewport is not higher than 500px.Source size values specify the intended display size of the image. User agents use the current source size to select one of the sources supplied by the srcset attribute, when those sources are described using width (w) descriptors. The selected source size affects the intrinsic size of the image (the image’s display size if no CSS styling is applied). If the srcset attribute is absent, or contains no values with a width descriptor, then the sizes attribute has no effect."
                },
                {
                  "name": "loading",
                  "type": "enumarated experimental",
                  "description": "Indicates how the browser should load the image",
                  "values": [
                    {
                      "name": "eager",
                      "description": "Loads the image immediately, regardless of whether or not the image is currently within the visible viewport (this is the default value)."
                    },
                    {
                      "name": "lazy",
                      "description": "Defers loading the image until it reaches a calculated distance from the viewport, as defined by the browser. The intent is to avoid the network and storage bandwidth needed to handle the image until it's reasonably certain that it will be needed. This generally improves the performance of the content in most typical use cases."
                    }
                  ]
                },
                {
                  "name": "decoding",
                  "description": "Provides an image decoding hint to the browser",
                  "values": [
                    {
                      "name": "sync",
                      "description": "Decode the image synchronously, for atomic presentation with other content."
                    },
                    {
                      "name": "async",
                      "description": "Decode the image asynchronously, to reduce delay in presenting other content."
                    },
                    {
                      "name": "auto",
                      "description": "Default: no preference for the decoding mode. The browser decides what is best for the user."
                    }
                  ]
                }
              ],
              "links": [
                {
                  "title": "CSS-tricks.com: Images are Hard",
                  "url": "https://css-tricks.com/images-are-hard/",
                  "lastEdited": "2021-07-22"
                },
                {
                  "title": "Smashing Magazine: The Humble <img> Element And Core Web Vitals by Addy Osmani",
                  "url": "https://www.smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/"
                },
                {
                  "title": "Those HTML Attributes You Never Use: The decoding Attribute For The <img> Element",
                  "url": "https://www.smashingmagazine.com/2022/03/html-attributes-you-never-use/#the-decoding-attribute-for-the-img-element",
                  "lastEdited": "2022-03-23"
                }
              ]
            },
            {
              "tag": "<svg>",
              "name": "The Scalabe Vector Graphics element",
              "description": "Scalabe Vector Graphics (SVG) is whole world of it's own! SVG is like an alternate universe version of HTML for vector graphics instead of content. Maybe one day I'll make a similar visualisation of all its elements too",
              "attributes": [
                {
                  "name": "height",
                  "description": "The height of the coordinate space in CSS pixels. Defaults to 150.",
                  "type": "number"
                },
                {
                  "name": "width",
                  "description": "The width of the coordinate space in CSS pixels. Defaults to 300.",
                  "type": "number"
                }
              ]
            },
            {
              "tag": "<canvas>",
              "name": "The Graphics Canvas element",
              "description": "Use the it with either the Canvas scripting API or the WebGL API to draw graphics and animations. You should provide alternate content inside the <canvas> block. That content will be rendered both on older browsers that don't support canvas and in browsers with JavaScript disabled.",
              "tip": "Use the object-fit CSS property to set how the <canvas> should be resized to fit its container",
              "type": "replacedelement",
              "attributes": [
                {
                  "name": "height",
                  "description": "The height of the coordinate space in CSS pixels. Defaults to 150.",
                  "type": "integer"
                },
                {
                  "name": "width",
                  "description": "The width of the coordinate space in CSS pixels. Defaults to 300.",
                  "type": "integer"
                }
              ],
              "links": [
                {
                  "url": "https://css-tricks.com/when-to-use-svg-vs-when-to-use-canvas/#canvas-is-a-javascript-drawing-api",
                  "title": "CSS-tricks.com: When to Use SVG vs. When to Use Canvas"
                }
              ]
            },
            {
              "tag": "<video>",
              "name": "The Video Embed element",
              "description": "Embeds a media player which supports video playback into the document.",
              "type": "replacedelement",
              "attributes": [
                {
                  "name": "autoplay",
                  "description": "If specified, the video automatically begins to play back as soon as it can do so without stopping to finish loading the data. Note: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control. See our autoplay guide for additional information about how to properly use autoplay.\n To disable video autoplay, autoplay='false' will not work; the video will autoplay if the attribute is there in the <video> tag at all. To remove autoplay, the attribute needs to be removed altogether. In some browsers (e.g. Chrome 70.0) autoplay doesn't work if no muted attribute is present.",
                  "type": "boolean"
                },
                {
                  "name": "autopictureinpicture",
                  "type": "boolean",
                  "description": "If true indicates that the element should automatically toggle picture-in-picture mode when the user switches back and forth between this document and another document or application."
                },
                {
                  "name": "controls",
                  "description": "If present, the browser will offer controls to allow the user to control video playback, including volume, seeking, and pause/resume playback.",
                  "type": "boolean"
                },
                {
                  "name": "controlslist",
                  "type": "enumarated",
                  "description": "When specified, helps the browser select what controls to show on the media element whenever the browser shows its own set of controls (e.g. when the controls attribute is specified)",
                  "values": [
                    {
                      "value": "nodownload",
                      "description": "Hints that the download control should be hidden"
                    },
                    {
                      "value": "nofullscreen",
                      "description": "Hints that the fullscreen mode control should be hidden."
                    },
                    {
                      "value": "noremoteplayback",
                      "description": "Hints that the remote playback control should be hidden."
                    }
                  ]
                },
                {
                  "name": "crossorigin",
                  "type": "enumarated",
                  "description": "Indicates whether to use CORS to fetch the related video. CORS-enabled resources can be reused in the <canvas> element without being tainted.",
                  "values": [
                    {
                      "value": "anonymous",
                      "description": "Sends a cross-origin request without a credential. In other words, it sends the Origin: HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted, and its usage restricted."
                    },
                    {
                      "value": "use-credentials",
                      "description": "Sends a cross-origin request with a credential. In other words, it sends the Origin: HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted. \n When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted used in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information."
                    }
                  ]
                },
                {
                  "name": "disablepictureinpicture",
                  "description": "To disable the Picture-In-Picture mode (and the control)",
                  "type": "boolean"
                },
                {
                  "name": "disableremoteplayback",
                  "description": "Used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc). In Safari, you can use x-webkit-airplay='deny' as a fallback.",
                  "type": "boolean"
                },
                {
                  "name": "height",
                  "description": "The height of the video's display area, in CSS pixels (absolute values only; no percentages.)",
                  "type": "pixels"
                },
                {
                  "name": "loop",
                  "description": "If specified, the browser will automatically seek back to the start upon reaching the end of the video.",
                  "type": "boolean"
                },
                {
                  "name": "muted",
                  "description": "Indicates the default setting of the audio contained in the video. If set, the audio will be initially silenced. Its default value is false, meaning that the audio will be played when the video is played.",
                  "type": "boolean"
                },
                {
                  "name": "playsinline",
                  "description": "Indicates that the video is to be played 'inline', that is within the element's playback area. Note that the absence of this attribute does not imply that the video will always be played in fullscreen.",
                  "type": "boolean"
                },
                {
                  "name": "poster",
                  "description": "A URL for an image to be shown while the video is downloading. If this attribute isn't specified, nothing is displayed until the first frame is available, then the first frame is shown as the poster frame.",
                  "type": "url"
                },
                {
                  "name": "preload",
                  "description": "Intended to provide a hint to the browser about what the author thinks will lead to the best user experience with regards to what content is loaded before the video is played. The default value is different for each browser. The spec advises it to be set to metadata.",
                  "type": "enumarated",
                  "values": [
                    {
                      "value": "none",
                      "description": "Indicates that the video should not be preloaded."
                    },
                    {
                      "value": "metadata",
                      "description": "Indicates that only video metadata (e.g. length) is fetched."
                    },
                    {
                      "value": "auto",
                      "description": "Indicates that the whole video file can be downloaded, even if the user is not expected to use it."
                    },
                    {
                      "value": "empty",
                      "description": "string: Synonym of the auto value."
                    }
                  ]
                },
                {
                  "name": "src",
                  "description": "The URL of the video to embed. This is optional; you may instead use the <source> element within the video block to specify the video to embed.",
                  "type": "url"
                },
                {
                  "name": "width",
                  "description": "The width of the video's display area, in CSS pixels (absolute values only; no percentages).",
                  "type": "pixels"
                }
              ],
              "children": [
                {
                  "link": "<source>"
                },
                {
                  "tag": "<track>",
                  "name": "The Embed Text Track element",
                  "description": "Used as a child of the media elements, <audio> and <video>. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) — Web Video Text Tracks.",
                  "type": "empty",
                  "attributes": [
                    {
                      "name": "default",
                      "description": "Indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one track element per media element."
                    },
                    {
                      "name": "kind",
                      "description": "How the text track is meant to be used. If omitted the default kind is subtitles. If the attribute contains an invalid value, it will use metadata (Versions of Chrome earlier than 52 treated an invalid value as subtitles). The following keywords are allowed:"
                    },
                    {
                      "value": "subtitles",
                      "description": "Subtitles provide translation of content that cannot be understood by the viewer. For example speech or text that is not English in an English language film. Subtitles may contain additional content, usually extra background information. For example the text at the beginning of the Star Wars films, or the date, time, and location of a scene."
                    },
                    {
                      "value": "captions",
                      "description": "Closed captions provide a transcription and possibly a translation of audio. It may include important non-verbal information such as music cues or sound effects. It may indicate the cue's source (e.g. music, text, character). Suitable for users who are deaf or when the sound is muted."
                    },
                    {
                      "value": "descriptions",
                      "description": "Textual description of the video content. Suitable for users who are blind or where the video cannot be seen."
                    },
                    {
                      "value": "chapters",
                      "description": "Chapter titles are intended to be used when the user is navigating the media resource."
                    },
                    {
                      "value": "metadata",
                      "description": "Tracks used by scripts. Not visible to the user."
                    },
                    {
                      "value": "label",
                      "description": "A user-readable title of the text track which is used by the browser when listing available text tracks."
                    },
                    {
                      "name": "src",
                      "description": "Address of the track (.vtt file). Must be a valid URL. This attribute must be specified and its URL value must have the same origin as the document — unless the <audio> or <video> parent element of the track element has a crossorigin attribute.",
                      "type": "url"
                    },
                    {
                      "name": "srclang",
                      "description": "Language of the track text data. It must be a valid BCP 47 language tag. If the kind attribute is set to subtitles, then srclang must be defined."
                    }
                  ]
                }
              ]
            },
            {
              "tag": "<audio>",
              "name": "The Embed Audio element",
              "description": "Used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream",
              "type": "replacedelement",
              "attributes": [
                {
                  "name": "autoplay",
                  "type": "boolean",
                  "description": "If specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading. Note: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control. See our autoplay guide for additional information about how to properly use autoplay."
                },
                {
                  "name": "controls",
                  "description": "If present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback."
                },
                {
                  "name": "crossorigin",
                  "description": "Indicates whether to use CORS to fetch the related audio file. CORS-enabled resources can be reused in the <canvas> element without being tainted. The allowed values are:",
                  "type": "enumarated",
                  "values": [
                    {
                      "value": "anonymous",
                      "description": "Sends a cross-origin request without a credential. In other words, it sends the Origin: HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted, and its usage restricted."
                    },
                    {
                      "value": "use-credentials",
                      "description": "Sends a cross-origin request with a credential. In other words, it sends the Origin: HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted. When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted used in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information."
                    },
                    {
                      "value": "currentTime",
                      "description": "Returns a double-precision floating-point value indicating the current audio playback position, in seconds. If the audio's metadata isn't available yet, currentTime instead indicates, and can be used to change, the time at which playback will begin. Otherwise, setting currentTime sets the current playback position to the given time and seeks the media to that position if the media is currently loaded. If the audio is being streamed, it's possible that the user agent may not be able to obtain some parts of the resource if that data has expired from the media buffer. Other audio may have a media timeline that doesn't start at 0 seconds, so setting currentTime to a time before that would fail. For example, if the audio's media timeline starts at 12 hours, setting currentTime to 3600 would be an attempt to set the current playback position well before the beginning of the media, and would fail. The getStartDate() method can be used to determine the beginning point of the media timeline's reference frame"
                    },
                    {
                      "value": "disableRemotePlayback",
                      "type": "boolean",
                      "description": "Used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc). In Safari, you can use x-webkit-airplay='deny' as a fallback"
                    },
                    {
                      "value": "duration",
                      "description": "Read only A double-precision floating-point value which indicates the duration (total length) of the audio in seconds, on the media's timeline. If no media is present on the element, or the media is not valid, the returned value is NaN. If the media has no known end (such as for live streams of unknown duration, web radio, media incoming from WebRTC, and so forth), this value is +Infinity."
                    },
                    {
                      "value": "loop",
                      "type": "boolean",
                      "description": "If specified, the audio player will automatically seek back to the start upon reaching the end of the audio."
                    },
                    {
                      "value": "muted",
                      "type": "boolean",
                      "description": "Indicates whether the audio will be initially silenced. Its default value is false."
                    },
                    {
                      "value": "preload",
                      "description": "Intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:"
                    },
                    {
                      "value": "none",
                      "description": "Indicates that the audio should not be preloaded."
                    },
                    {
                      "value": "metadata",
                      "description": "Indicates that only audio metadata (e.g. length) is fetched"
                    },
                    {
                      "value": "auto",
                      "description": "Indicates that the whole audio file can be downloaded, even if the user is not expected to use it. The default value is different for each browser. The spec advises it to be set to metadata. The autoplay attribute has precedence over preload. If autoplay is specified, the browser would obviously need to start downloading the audio for playback. The browser is not forced by the specification to follow the value of this attribute; it is a mere hint."
                    },
                    {
                      "value": "src",
                      "description": "The URL of the audio to embed. This is subject to HTTP access controls. This is optional; you may instead use the <source> element within the audio block to specify the audio to embed."
                    }
                  ]
                }
              ],
              "children": [
                {
                  "link": "<source>"
                }
              ]
            },
            {
              "tag": "<iframe>",
              "name": "The Inline Frame element",
              "description": "Represents a nested browsing context, embedding another HTML page into the current one",
              "type": "replacedelement",
              "attributes": [
                {
                  "name": "allow",
                  "description": "Specifies a feature policy for the <iframe>. The policy defines what features are available to the <iframe> based on the origin of the request (e.g. access to the microphone, camera, battery, web-share API, etc.).",
                  "links": [
                    {
                      "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy/Using_Feature_Policy#the_iframe_allow_attribute",
                      "title": "MDN: Using Feature Policy. The iframe allow attribute."
                    }
                  ]
                },
                {
                  "name": "height",
                  "description": "The height of the frame in CSS pixels. Default is 150.",
                  "type": "integer"
                },
                {
                  "name": "width",
                  "description": "The width of the frame in CSS pixels. Default is 300.",
                  "type": "integer"
                },
                {
                  "name": "name",
                  "description": "A targetable name for the embedded browsing context. This can be used in the target attribute of the <a>, <form>, or <base> elements; the formtarget attribute of the <input> or <button> elements; or the windowName parameter in the window.open() method."
                },
                {
                  "name": "referrerpolicy",
                  "description": ""
                },
                {
                  "name": "sandbox",
                  "description": "Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply all restrictions, or space-separated tokens to lift particular restrictions. When the embedded document has the same origin as the embedding page, it is strongly discouraged to use both allow-scripts and allow-same-origin, as that lets the embedded document remove the sandbox attribute — making it no more secure than not using the sandbox attribute at all.",
                  "type": "enumarated",
                  "values": [
                    {
                      "value": "allow-downloads-without-user-activation ",
                      "description": "Allows for downloads to occur without a gesture from the user."
                    },
                    {
                      "value": "allow-downloads",
                      "description": "Allows for downloads to occur with a gesture from the user."
                    },
                    {
                      "value": "allow-forms",
                      "description": "Allows the resource to submit forms. If this keyword is not used, form submission is blocked."
                    },
                    {
                      "value": "allow-modals",
                      "description": "Lets the resource open modal windows."
                    },
                    {
                      "value": "allow-orientation-lock",
                      "description": "Lets the resource lock the screen orientation."
                    },
                    {
                      "value": "allow-pointer-lock",
                      "description": "Lets the resource use the Pointer Lock API."
                    },
                    {
                      "value": "allow-popups",
                      "description": "Allows popups (such as window.open(), target='_blank', or showModalDialog()). If this keyword is not used, the popup will silently fail to open."
                    },
                    {
                      "value": "allow-popups-to-escape-sandbox",
                      "description": "Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to."
                    },
                    {
                      "value": "allow-presentation",
                      "description": "Lets the resource start a presentation session."
                    },
                    {
                      "value": "allow-same-origin",
                      "description": "If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy (potentially preventing access to data storage/cookies and some JavaScript APIs)."
                    },
                    {
                      "value": "allow-scripts",
                      "description": "Lets the resource run scripts (but not create popup windows)."
                    },
                    {
                      "value": "allow-storage-access-by-user-activation ",
                      "description": "Lets the resource request access to the parent's storage capabilities with the Storage Access API."
                    },
                    {
                      "value": "allow-top-navigation",
                      "description": "Lets the resource navigate the top-level browsing context (the one named _top)."
                    },
                    {
                      "value": "allow-top-navigation-by-user-activation",
                      "description": "Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture."
                    }
                  ]
                },
                {
                  "name": "src",
                  "description": "The URL of the page to embed.",
                  "type": "url"
                },
                {
                  "name": "srcdoc",
                  "description": "Inline HTML to embed, overriding the src attribute. If a browser does not support the srcdoc attribute, it will fall back to the URL in the src attribute."
                }
              ],
              "links": [
                {
                  "title": "Google Cloud Blog: iframe sandbox permissions tutorial",
                  "url": "https://cloud.google.com/blog/products/data-analytics/iframe-sandbox-tutorial"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
